/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
 */
const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('‚öôÔ∏è –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—Å–∫–∞–µ–º—Å—è –ª–∏ –º—ã –≤ CI –æ–∫—Ä—É–∂–µ–Ω–∏–∏
const isCI = process.env.CI === 'true';
console.log(isCI ? 'üöÄ –ó–∞–ø—É—Å–∫ –≤ CI –æ–∫—Ä—É–∂–µ–Ω–∏–∏' : 'üíª –ó–∞–ø—É—Å–∫ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏');

// –í CI —Å—Ä–µ–¥–µ –Ω–µ –Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
if (!isCI) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ cross-env –≥–ª–æ–±–∞–ª—å–Ω–æ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–µ
    try {
        execSync('npm list -g cross-env', { stdio: 'ignore' });
        console.log('‚úÖ cross-env –Ω–∞–π–¥–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ');
    } catch (e) {
        console.log('‚ö†Ô∏è cross-env –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ. –£—Å—Ç–∞–Ω–æ–≤–∫–∞...');
        try {
            execSync('npm install -g cross-env', { stdio: 'inherit' });
            console.log('‚úÖ cross-env —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ');
        } catch (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ cross-env:', err.message);
        }
    }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ cross-env –≤ node_modules
try {
    require.resolve('cross-env');
    console.log('‚úÖ cross-env –Ω–∞–π–¥–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ');
} catch (e) {
    console.log('‚ö†Ô∏è cross-env –Ω–µ –Ω–∞–π–¥–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...');
    try {
        execSync('npm install cross-env --save', { stdio: 'inherit' });
        console.log('‚úÖ cross-env —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ');
    } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ cross-env:', err.message);
    }
}

// –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ä—Å–∏–∏ Node.js
console.log(`‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Node.js ${process.version}`);

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞
try {
    let envContent = `NODE_OPTIONS=--openssl-legacy-provider --no-deprecation --max-old-space-size=4096

# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ source maps –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
GENERATE_SOURCEMAP=false
SKIP_PREFLIGHT_CHECK=true

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–∂–∏–º–∞ development –¥–ª—è ESLint
ESLINT_NO_DEV_ERRORS=true

# –û—Ç–∫–ª—é—á–∏—Ç—å –æ—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
BROWSER=none

# –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è source-map-loader
TSC_COMPILE_ON_ERROR=true
`;

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Firebase –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ —Ñ–∞–π–ª–∞ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    try {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ —Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        const firebaseEnvFallbackPath = path.join(__dirname, 'netlify', 'firebase-env-fallback.js');
        if (fs.existsSync(firebaseEnvFallbackPath)) {
            const firebaseEnvFallback = require(firebaseEnvFallbackPath);
            
            // –ü–µ—Ä–µ—á–∏—Å–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Firebase
            const firebaseEnvVars = [
                'REACT_APP_FIREBASE_API_KEY',
                'REACT_APP_FIREBASE_AUTH_DOMAIN',
                'REACT_APP_FIREBASE_PROJECT_ID',
                'REACT_APP_FIREBASE_STORAGE_BUCKET',
                'REACT_APP_FIREBASE_MESSAGING_SENDER_ID',
                'REACT_APP_FIREBASE_APP_ID'
            ];
            
            // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
            for (const varName of firebaseEnvVars) {
                const value = process.env[varName] || firebaseEnvFallback[varName];
                if (value) {
                    envContent += `\n${varName}=${value}`;
                }
            }
        }
    } catch (firebaseError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ Firebase –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:', firebaseError.message);
    }

    const envPath = path.join(__dirname, '.env');
    fs.writeFileSync(envPath, envContent, 'utf8');
    console.log('‚úÖ –§–∞–π–ª .env –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏');
} catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ .env:', error.message);
}

console.log('‚úÖ –°–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω');
