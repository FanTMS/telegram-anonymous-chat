/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π –Ω–∞ Netlify
 */
const { execSync } = require('child_process');
const path = require('path');
const fs = require('fs');

console.log('üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–±–æ—Ä–∫–µ –¥–ª—è Netlify...');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Node.js
console.log(`üìä –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Node.js ${process.version}`);

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Firebase (—Ç–æ–ª—å–∫–æ –∏—Ö –Ω–∞–ª–∏—á–∏–µ, –Ω–µ –∑–Ω–∞—á–µ–Ω–∏—è)
const firebaseEnvVars = [
    'REACT_APP_FIREBASE_API_KEY',
    'REACT_APP_FIREBASE_AUTH_DOMAIN',
    'REACT_APP_FIREBASE_PROJECT_ID',
    'REACT_APP_FIREBASE_STORAGE_BUCKET',
    'REACT_APP_FIREBASE_MESSAGING_SENDER_ID',
    'REACT_APP_FIREBASE_APP_ID'
];

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Firebase:');
firebaseEnvVars.forEach(varName => {
    console.log(`  - ${varName}: ${process.env[varName] ? '–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞' : '–ù–ï –û–ü–†–ï–î–ï–õ–ï–ù–ê'}`);
});

try {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cross-env –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è Netlify
    console.log('üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ cross-env –≥–ª–æ–±–∞–ª—å–Ω–æ...');
    execSync('npm install -g cross-env', { stdio: 'inherit' });

    console.log('üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...');
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è 
    process.env.NODE_OPTIONS = '--openssl-legacy-provider --no-deprecation';
    process.env.GENERATE_SOURCEMAP = 'false';

    // –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –¥–ª—è —Å–±–æ—Ä–∫–∏ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ Firebase
    let envContent = `
GENERATE_SOURCEMAP=false
SKIP_PREFLIGHT_CHECK=true
TSC_COMPILE_ON_ERROR=true
BROWSER=none
`;

    // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Firebase –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    for (const varName of firebaseEnvVars) {
        if (process.env[varName]) {
            envContent += `${varName}=${process.env[varName]}\n`;
        }
    }

    fs.writeFileSync(path.join(process.cwd(), '.env'), envContent);
    console.log('‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω —Å–æ –≤—Å–µ–º–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏');

    console.log('üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã—Ö –≤–µ—Ä—Å–∏–π ajv –∏ ajv-keywords...');
    execSync('npm install ajv@6.12.6 ajv-keywords@3.5.2 --save-exact', { stdio: 'inherit' });

    console.log('üõ† –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å–±–æ—Ä–∫–∏...');
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É —Å –ø–æ–ª–Ω—ã–º –≤—ã–≤–æ–¥–æ–º –ª–æ–≥–æ–≤ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    execSync('npx react-scripts build', {
        stdio: 'inherit',
        env: {
            ...process.env
        }
    });
    console.log('‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
} catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ:', error.message);

    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
    console.error('üîç –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ...');
    try {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ package.json
        execSync('ls -la', { stdio: 'inherit' });

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ .env (–±–µ–∑ –ø–æ–∫–∞–∑–∞ –∑–Ω–∞—á–µ–Ω–∏–π)
        console.log('üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ .env (—Ç–æ–ª—å–∫–æ –∏–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö):');
        const envFileContent = fs.existsSync('.env') ?
            fs.readFileSync('.env', 'utf8').split('\n').map(line => {
                const [name] = line.split('=');
                return name;
            }).join('\n') : '–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω';
        console.log(envFileContent);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ node_modules
        console.log('üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ node_modules:');
        execSync('ls -la node_modules | wc -l', { stdio: 'inherit' });

    } catch (debugError) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:', debugError);
    }

    process.exit(1);
}
