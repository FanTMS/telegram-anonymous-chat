/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤ Firestore
 */
const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

// –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∏–Ω–¥–µ–∫—Å–æ–≤
const createIndexesFile = () => {
    const indexesConfig = {
        "indexes": [
            {
                "collectionGroup": "searchQueue",
                "queryScope": "COLLECTION",
                "fields": [
                    {
                        "fieldPath": "timestamp",
                        "order": "ASCENDING"
                    }
                ]
            },
            {
                "collectionGroup": "chats",
                "queryScope": "COLLECTION",
                "fields": [
                    {
                        "fieldPath": "participants",
                        "arrayConfig": "CONTAINS"
                    },
                    {
                        "fieldPath": "createdAt",
                        "order": "DESCENDING"
                    }
                ]
            },
            {
                "collectionGroup": "messages",
                "queryScope": "COLLECTION",
                "fields": [
                    {
                        "fieldPath": "chatId",
                        "order": "ASCENDING"
                    },
                    {
                        "fieldPath": "timestamp",
                        "order": "ASCENDING"
                    }
                ]
            }
        ],
        "fieldOverrides": []
    };

    const indexesPath = path.join(__dirname, '..', 'firestore.indexes.json');
    fs.writeFileSync(indexesPath, JSON.stringify(indexesConfig, null, 2));
    
    console.log('‚úÖ –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–Ω–¥–µ–∫—Å–æ–≤ —Å–æ–∑–¥–∞–Ω');
    return indexesPath;
};

const deployIndexes = async () => {
    try {
        console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤ Firestore...');
        
        // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–Ω–¥–µ–∫—Å–æ–≤
        const indexesPath = createIndexesFile();
        
        // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
        const dotenvPath = path.join(__dirname, '..', '.env');
        if (fs.existsSync(dotenvPath)) {
            require('dotenv').config({ path: dotenvPath });
        }
        
        // ID –ø—Ä–æ–µ–∫—Ç–∞ Firebase
        const projectId = process.env.REACT_APP_FIREBASE_PROJECT_ID || 'oleop-19cc2';
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Firebase CLI
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Firebase CLI...');
        try {
            execSync('npx firebase --version', { stdio: 'ignore' });
        } catch (error) {
            console.log('üì¶ Firebase CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...');
            execSync('npm install -g firebase-tools', { stdio: 'inherit' });
        }
        
        // –î–µ–ø–ª–æ–∏–º –∏–Ω–¥–µ–∫—Å—ã
        console.log(`üì§ –î–µ–ø–ª–æ–∏–º –∏–Ω–¥–µ–∫—Å—ã –≤ –ø—Ä–æ–µ–∫—Ç ${projectId}...`);
        execSync(`npx firebase deploy --only firestore:indexes --project=${projectId}`, {
            stdio: 'inherit'
        });
        
        console.log('‚úÖ –ò–Ω–¥–µ–∫—Å—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã –∏ –∑–∞–¥–µ–ø–ª–æ–µ–Ω—ã');
        return true;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω–¥–µ–∫—Å–æ–≤:', error.message);
        return false;
    }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
deployIndexes();
