const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üîç –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫ ESLint...');

try {
    // –ó–∞–ø—É—Å–∫–∞–µ–º ESLint —Å –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º, –≥–¥–µ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ
    console.log('üõ† –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è ESLint –æ—à–∏–±–æ–∫...');
    
    try {
        execSync('npx eslint --fix ./src', { stdio: 'inherit' });
        console.log('‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ESLint –æ—à–∏–±–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    } catch (eslintError) {
        console.log('‚ö†Ô∏è ESLint –≤—ã—è–≤–∏–ª –æ—à–∏–±–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
        console.log('   –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –æ—à–∏–±–∫–∏ –º–æ–≥—É—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è');
    }

    // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–∞–≤—ã—á–µ–∫ –≤ BeginnerGuide.js
    const beginnerGuidePath = path.join(__dirname, '..', 'src', 'pages', 'BeginnerGuide.js');
    if (fs.existsSync(beginnerGuidePath)) {
        console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–∞–≤—ã—á–µ–∫ –≤ BeginnerGuide.js...');
        let content = fs.readFileSync(beginnerGuidePath, 'utf8');
        
        // –ó–∞–º–µ–Ω—è–µ–º –æ–±—ã—á–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –Ω–∞ HTML-—Å—É—â–Ω–æ—Å—Ç–∏
        content = content.replace(/(?<=\>)([^<]*)"/g, '$1&ldquo;');
        content = content.replace(/"(?=[^>]*\<)/g, '&rdquo;');
        
        fs.writeFileSync(beginnerGuidePath, content, 'utf8');
        console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–∞–≤—ã—á–µ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ .env.production —Å CI=false –¥–ª—è –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ
    const envProdPath = path.join(__dirname, '..', '.env.production');
    let envContent = 'CI=false\n';
    
    if (fs.existsSync(envProdPath)) {
        const existingContent = fs.readFileSync(envProdPath, 'utf8');
        if (!existingContent.includes('CI=false')) {
            envContent = existingContent + '\nCI=false\n';
        } else {
            console.log('‚úÖ .env.production —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç CI=false');
            return;
        }
    }
    
    fs.writeFileSync(envProdPath, envContent, 'utf8');
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω —Ñ–∞–π–ª .env.production —Å CI=false –¥–ª—è –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ');

    console.log('‚úÖ –í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è ESLint –æ—à–∏–±–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω—ã');
} catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ ESLint –æ—à–∏–±–æ–∫:', error);
}
