import React from 'react';
import { Outlet } from 'react-router-dom';
import BottomNavigation from './BottomNavigation';
import './AppLayout.css';
import { useUser } from '../contexts/UserContext';

const AppLayout = () => {
  const { user } = useUser();

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  const navigationItems = [
    {
      path: '/',
      label: '–ì–ª–∞–≤–Ω–∞—è',
      icon: 'üè†'
    },
    {
      path: '/chats',
      label: '–ß–∞—Ç—ã',
      icon: 'üí¨'
    },
    {
      path: '/profile',
      label: '–ü—Ä–æ—Ñ–∏–ª—å',
      icon: 'üë§'
    },
    {
            document.documentElement.setAttribute('data-theme', isDarkMode ? 'dark' : 'light');

            // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º —Ü–≤–µ—Ç–∞ –ø–æ–¥ —Ç–µ–º—É Telegram
            document.documentElement.style.setProperty('--tg-theme-bg-color', WebApp.backgroundColor);
            document.documentElement.style.setProperty('--tg-theme-text-color', WebApp.textColor);
            document.documentElement.style.setProperty('--tg-theme-hint-color', WebApp.subtitleColor || '#999999');
            document.documentElement.style.setProperty('--tg-theme-button-color', WebApp.buttonColor);
            document.documentElement.style.setProperty('--tg-theme-button-text-color', WebApp.buttonTextColor);
            document.documentElement.style.setProperty('--tg-theme-secondary-bg-color', WebApp.secondaryBackgroundColor);

            // –†–∞—Å—à–∏—Ä—è–µ–º –¥–æ –ø–æ–ª–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
            if (isWebAppMethodSupported('isExpanded') && !WebApp.isExpanded && isWebAppMethodSupported('expand')) {
                WebApp.expand();
            }
        } catch (error) {
            console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ç–µ–º—ã Telegram:', error);
        }
    }, []);

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø—É—Ç–∏
    useEffect(() => {
        let pageTitle = '–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç';

        if (location.pathname === '/' || location.pathname === '/home') {
            pageTitle = '–ì–ª–∞–≤–Ω–∞—è';
        } else if (location.pathname === '/chats') {
            pageTitle = '–ú–æ–∏ —á–∞—Ç—ã';
        } else if (location.pathname.startsWith('/chat/')) {
            pageTitle = '–ß–∞—Ç';
        } else if (location.pathname === '/random-chat') {
            pageTitle = '–°–ª—É—á–∞–π–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫';
        } else if (location.pathname === '/profile') {
            pageTitle = '–ü—Ä–æ—Ñ–∏–ª—å';
        } else if (location.pathname === '/settings') {
            pageTitle = '–ù–∞—Å—Ç—Ä–æ–π–∫–∏';
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ Telegram WebApp
        if (isWebAppMethodSupported('setHeaderColor')) {
            WebApp.setHeaderColor('secondary_bg_color');
        }
        if (isWebAppMethodSupported('setBackgroundColor')) {
            WebApp.setBackgroundColor('secondary_bg_color');
        }
        if (isWebAppMethodSupported('setTitle')) {
            WebApp.setTitle(pageTitle);
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—ã—á–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.title = pageTitle;
    }, [location]);

    return (
        <div className="app-container">
            <AnimatePresence mode="wait">
                <PageTransition key={location.pathname}>
                    <main className="page-content">
                        <Outlet />
                    </main>
                </PageTransition>
            </AnimatePresence>

            {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∏–∂–Ω–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
            <BottomNavigation />
        </div>
    );
};

export default AppLayout;
