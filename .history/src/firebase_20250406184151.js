import { initializeApp } from 'firebase/app';
import {
    getFirestore,
    initializeFirestore,
    enableIndexedDbPersistence,
    CACHE_SIZE_UNLIMITED,
    connectFirestoreEmulator
} from 'firebase/firestore';
import { getAuth } from 'firebase/auth';
import { getStorage } from 'firebase/storage';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase
const firebaseConfig = {
    apiKey: "AIzaSyC0eBiNqbL4CLC9mfA_qBwpM5gePWHGN9c",
    authDomain: "oleop-19cc2.firebaseapp.com",
    projectId: "oleop-19cc2",
    storageBucket: "oleop-19cc2.appspot.com",
    messagingSenderId: "452609655600",
    appId: "1:452609655600:web:95c47ff9b3ea191f6fbef5"
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
const validateConfig = (config) => {
    const missingFields = [];
    for (const [key, value] of Object.entries(config)) {
        if (!value || value === "undefined") {
            missingFields.push(key);
        }
    }

    if (missingFields.length > 0) {
        console.error(`–û–®–ò–ë–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò FIREBASE: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: ${missingFields.join(', ')}`);
        return false;
    }
    return true;
};

// –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
const isValidConfig = validateConfig(firebaseConfig);
if (!isValidConfig) {
    console.error("–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Firebase –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π");
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
console.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase —Å –ø—Ä–æ–µ–∫—Ç–æ–º:", firebaseConfig.projectId);
const app = initializeApp(firebaseConfig);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firestore —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
const db = initializeFirestore(app, {
    cacheSizeBytes: CACHE_SIZE_UNLIMITED,
    ignoreUndefinedProperties: true
});

const auth = getAuth(app);
const storage = getStorage(app);

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Firestore
const checkFirestoreConnection = async () => {
    try {
        const timestamp = Date.now();
        console.log(`[${timestamp}] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Firestore...`);
        // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∫—É–º–µ–Ω—Ç, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        const testCollection = 'system';
        const testDoc = 'connection_test';

        await db.collection(testCollection).doc(testDoc).set({
            lastCheck: timestamp,
            status: 'online'
        });

        console.log(`[${timestamp}] –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Firestore —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!`);
        return true;
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Firestore:", error);
        return false;
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –¥–ª—è –æ—Ñ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º–∞
try {
    enableIndexedDbPersistence(db)
        .then(() => {
            console.log("‚úÖ Firestore –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –≤–∫–ª—é—á–µ–Ω–∞");
        })
        .catch((err) => {
            if (err.code === 'failed-precondition') {
                console.warn('‚ö†Ô∏è –ü–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω–∞ (–Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∫–ª–∞–¥–æ–∫)');
            } else if (err.code === 'unimplemented') {
                console.warn('‚ö†Ô∏è –ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å');
            } else {
                console.error("‚ùå –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏:", err);
            }
        });
} catch (e) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Firestore:", e);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –º—ã –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, —Ç–æ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —ç–º—É–ª—è—Ç–æ—Ä—É
if (process.env.NODE_ENV === 'development' && process.env.REACT_APP_USE_FIREBASE_EMULATOR === 'true') {
    try {
        const host = process.env.REACT_APP_FIREBASE_EMULATOR_HOST || 'localhost';
        const port = process.env.REACT_APP_FIREBASE_EMULATOR_PORT || 8080;
        console.log(`üîß –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —ç–º—É–ª—è—Ç–æ—Ä—É Firestore: ${host}:${port}`);
        connectFirestoreEmulator(db, host, port);
    } catch (e) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —ç–º—É–ª—è—Ç–æ—Ä—É:", e);
    }
}

export { app, db, auth, storage, checkFirestoreConnection };
