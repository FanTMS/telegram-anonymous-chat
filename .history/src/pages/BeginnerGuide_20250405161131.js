import React, { useState, useEffect, useRef } from 'react';
import { useNavigate } from 'react-router-dom';
import { motion, AnimatePresence } from 'framer-motion';
import WebApp from '@twa-dev/sdk';
import '../styles/BeginnerGuide.css';

const BeginnerGuide = () => {
    const navigate = useNavigate();
    const [currentSection, setCurrentSection] = useState(0);
    const [scrollProgress, setScrollProgress] = useState(0);
    const containerRef = useRef(null);

    // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å–∫—Ä–æ–ª–ª–∞
    useEffect(() => {
        const handleScroll = () => {
            if (!containerRef.current) return;

            const windowHeight = window.innerHeight;
            const documentHeight = document.documentElement.scrollHeight;
            const scrollTop = window.scrollY;

            const scrolled = (scrollTop / (documentHeight - windowHeight)) * 100;
            setScrollProgress(scrolled);
        };

        window.addEventListener('scroll', handleScroll);
        return () => window.removeEventListener('scroll', handleScroll);
    }, []);

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    useEffect(() => {
        try {
            if (typeof WebApp !== 'undefined' && WebApp.BackButton) {
                WebApp.BackButton.show();
                WebApp.BackButton.onClick(() => navigate(-1));

                return () => {
                    WebApp.BackButton.offClick(() => navigate(-1));
                    WebApp.BackButton.hide();
                };
            }
        } catch (error) {
            console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥":', error);
        }
    }, [navigate]);

    const sections = [
        {
            title: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç",
            content: (
                <motion.div
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.5 }}
                    className="guide-content-section"
                >
                    <div className="guide-illustration welcome-illustration">
                        <span className="guide-emoji">üëã</span>
                    </div>
                    <p>–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–º –∞–Ω–æ–Ω–∏–º–Ω–æ–º —á–∞—Ç–µ! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è —Å –Ω–æ–≤—ã–º–∏ –ª—é–¥—å–º–∏ –±–µ–∑ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Å–≤–æ–µ–π –ª–∏—á–Ω–æ—Å—Ç–∏.</p>
                    <p>–≠—Ç–æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –±—ã—Å—Ç—Ä–æ –æ—Å–≤–æ–∏—Ç—å—Å—è –∏ –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –æ—Ç –æ–±—â–µ–Ω–∏—è.</p>
                </motion.div>
            )
        },
        {
            title: "–ö–∞–∫ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ",
            content: (
                <motion.div
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.5 }}
                    className="guide-content-section"
                >
                    <div className="guide-illustration start-illustration">
                        <span className="guide-emoji">üöÄ</span>
                    </div>
                    <p>–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä —Å –Ω–æ–≤—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º:</p>
                    <ol className="guide-steps">
                        <motion.li
                            initial={{ opacity: 0, x: -10 }}
                            animate={{ opacity: 1, x: 0 }}
                            transition={{ delay: 0.2 }}
                        >
                            –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–°–ª—É—á–∞–π–Ω—ã–π —á–∞—Ç" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
                        </motion.li>
                        <motion.li
                            initial={{ opacity: 0, x: -10 }}
                            animate={{ opacity: 1, x: 0 }}
                            transition={{ delay: 0.3 }}
                        >
                            –î–æ–∂–¥–∏—Ç–µ—Å—å, –ø–æ–∫–∞ —Å–∏—Å—Ç–µ–º–∞ –Ω–∞–π–¥–µ—Ç –¥–ª—è –≤–∞—Å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
                        </motion.li>
                        <motion.li
                            initial={{ opacity: 0, x: -10 }}
                            animate={{ opacity: 1, x: 0 }}
                            transition={{ delay: 0.4 }}
                        >
                            –ö–æ–≥–¥–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω, –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –±–µ—Å–µ–¥—É
                        </motion.li>
                    </ol>
                    <div className="guide-tip">
                        <span className="guide-tip-icon">üí°</span>
                        <p>–•–æ—Ä–æ—à–µ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —à–∞–Ω—Å—ã –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä!</p>
                    </div>
                </motion.div>
            )
        },
        {
            title: "–°–æ–≤–µ—Ç—ã –¥–ª—è –æ–±—â–µ–Ω–∏—è",
            content: (
                <motion.div
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.5 }}
                    className="guide-content-section"
                >
                    <div className="guide-illustration tips-illustration">
                        <span className="guide-emoji">üí¨</span>
                    </div>
                    <p>–ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à–µ –æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—è—Ç–Ω—ã–º –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º:</p>
                    <div className="guide-cards-container">
                        <motion.div
                            className="guide-card"
                            initial={{ opacity: 0, scale: 0.9 }}
                            animate={{ opacity: 1, scale: 1 }}
                            transition={{ delay: 0.1 }}
                            whileHover={{ y: -5, boxShadow: "0px 10px 20px rgba(0, 0, 0, 0.1)" }}
                        >
                            <div className="guide-card-icon">üôÇ</div>
                            <div className="guide-card-content">
                                <h3>–ë—É–¥—å—Ç–µ –≤–µ–∂–ª–∏–≤—ã</h3>
                                <p>–£–≤–∞–∂–∞–π—Ç–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∏ –µ–≥–æ –º–Ω–µ–Ω–∏–µ</p>
                            </div>
                        </motion.div>

                        <motion.div
                            className="guide-card"
                            initial={{ opacity: 0, scale: 0.9 }}
                            animate={{ opacity: 1, scale: 1 }}
                            transition={{ delay: 0.2 }}
                            whileHover={{ y: -5, boxShadow: "0px 10px 20px rgba(0, 0, 0, 0.1)" }}
                        >
                            <div className="guide-card-icon">‚ùì</div>
                            <div className="guide-card-content">
                                <h3>–ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã</h3>
                                <p>–ò–Ω—Ç–µ—Ä–µ—Å—É–π—Ç–µ—Å—å –º–Ω–µ–Ω–∏–µ–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞</p>
                            </div>
                        </motion.div>

                        <motion.div
                            className="guide-card"
                            initial={{ opacity: 0, scale: 0.9 }}
                            animate={{ opacity: 1, scale: 1 }}
                            transition={{ delay: 0.3 }}
                            whileHover={{ y: -5, boxShadow: "0px 10px 20px rgba(0, 0, 0, 0.1)" }}
                        >
                            <div className="guide-card-icon">üö´</div>
                            <div className="guide-card-content">
                                <h3>–ò–∑–±–µ–≥–∞–π—Ç–µ —Å–ø–∞–º–∞</h3>
                                <p>–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è</p>
                            </div>
                        </motion.div>
                    </div>
                </motion.div>
            )
        },
        {
            title: "–ü—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
            content: (
                <motion.div
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.5 }}
                    className="guide-content-section"
                >
                    <div className="guide-illustration safety-illustration">
                        <span className="guide-emoji">üîí</span>
                    </div>
                    <p>–î–ª—è –≤–∞—à–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è:</p>
                    <ul className="guide-safety-list">
                        <motion.li
                            initial={{ opacity: 0, x: -10 }}
                            animate={{ opacity: 1, x: 0 }}
                            transition={{ delay: 0.2 }}
                        >
                            <span className="safety-icon">üö´</span>
                            <span>–ù–µ –¥–µ–ª–∏—Ç–µ—Å—å –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π</span>
                        </motion.li>
                        <motion.li
                            initial={{ opacity: 0, x: -10 }}
                            animate={{ opacity: 1, x: 0 }}
                            transition={{ delay: 0.3 }}
                        >
                            <span className="safety-icon">üí∏</span>
                            <span>–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –¥–µ–Ω—å–≥–∏ –∏–ª–∏ –ø–æ–¥–∞—Ä–∫–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞–º</span>
                        </motion.li>
                        <motion.li
                            initial={{ opacity: 0, x: -10 }}
                            animate={{ opacity: 1, x: 0 }}
                            transition={{ delay: 0.4 }}
                        >
                            <span className="safety-icon">‚ö†Ô∏è</span>
                            <span>–°–æ–æ–±—â–∞–π—Ç–µ –æ –Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é "–ñ–∞–ª–æ–±–∞"</span>
                        </motion.li>
                        <motion.li
                            initial={{ opacity: 0, x: -10 }}
                            animate={{ opacity: 1, x: 0 }}
                            transition={{ delay: 0.5 }}
                        >
                            <span className="safety-icon">üö™</span>
                            <span>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç", –µ—Å–ª–∏ —á—É–≤—Å—Ç–≤—É–µ—Ç–µ –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç</span>
                        </motion.li>
                    </ul>
                </motion.div>
            )
        }
    ];

    const nextSection = () => {
        try {
            // Haptic feedback –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
            if (WebApp.HapticFeedback) {
                WebApp.HapticFeedback.impactOccurred('medium');
            }
        } catch (e) {
            console.warn('Haptic feedback –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', e);
        }

        if (currentSection < sections.length - 1) {
            setCurrentSection(currentSection + 1);
            window.scrollTo({ top: 0, behavior: 'smooth' });
        } else {
            navigate('/random-chat');
        }
    };

    const prevSection = () => {
        try {
            // Haptic feedback –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
            if (WebApp.HapticFeedback) {
                WebApp.HapticFeedback.impactOccurred('light');
            }
        } catch (e) {
            console.warn('Haptic feedback –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', e);
        }

        if (currentSection > 0) {
            setCurrentSection(currentSection - 1);
            window.scrollTo({ top: 0, behavior: 'smooth' });
        }
    };

    const skipGuide = () => {
        try {
            // Haptic feedback –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
            if (WebApp.HapticFeedback) {
                WebApp.HapticFeedback.notificationOccurred('warning');
            }
        } catch (e) {
            console.warn('Haptic feedback –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', e);
        }

        navigate('/random-chat');
    };

    const progressPercent = ((currentSection + 1) / sections.length) * 100;

    return (
        <div className="beginner-guide" ref={containerRef}>
            <div className="guide-progress">
                <motion.div
                    className="guide-progress-bar"
                    initial={{ width: `${((currentSection) / sections.length) * 100}%` }}
                    animate={{ width: `${progressPercent}%` }}
                    transition={{ duration: 0.3 }}
                ></motion.div>
            </div>

            <motion.h1
                className="guide-title"
                key={`title-${currentSection}`}
                initial={{ opacity: 0, y: -20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5 }}
            >
                {sections[currentSection].title}
            </motion.h1>

            <AnimatePresence mode="wait">
                <motion.div
                    key={`content-${currentSection}`}
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    exit={{ opacity: 0 }}
                    transition={{ duration: 0.3 }}
                    className="guide-content"
                >
                    {sections[currentSection].content}
                </motion.div>
            </AnimatePresence>

            <div className="guide-nav">
                {currentSection > 0 && (
                    <motion.button
                        className="guide-btn guide-btn-back"
                        onClick={prevSection}
                        whileTap={{ scale: 0.95 }}
                        initial={{ opacity: 0, x: -10 }}
                        animate={{ opacity: 1, x: 0 }}
                    >
                        –ù–∞–∑–∞–¥
                    </motion.button>
                )}

                <motion.button
                    className="guide-btn guide-btn-next"
                    onClick={nextSection}
                    whileTap={{ scale: 0.95 }}
                    whileHover={{ scale: 1.03 }}
                    initial={{ opacity: 0, x: 10 }}
                    animate={{ opacity: 1, x: 0 }}
                >
                    {currentSection < sections.length - 1 ? '–î–∞–ª–µ–µ' : '–ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ'}
                </motion.button>
            </div>

            {currentSection < sections.length - 1 && (
                <motion.button
                    className="guide-btn guide-btn-skip"
                    onClick={skipGuide}
                    initial={{ opacity: 0, y: 10 }}
                    animate={{ opacity: 1, y: 0, transition: { delay: 0.5 } }}
                >
                    –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ
                </motion.button>
            )}
        </div>
    );
};

export default BeginnerGuide;
