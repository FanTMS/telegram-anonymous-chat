import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import WebApp from '@twa-dev/sdk';
import '../styles/Home.css';

const Home = ({ user }) => {
    const navigate = useNavigate();
    const [stats, setStats] = useState({
        totalChats: 0,
        activeChats: 0,
        lastActivity: null
    });
    const [isLoading, setIsLoading] = useState(true);

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    useEffect(() => {
        const loadUserStats = async () => {
            if (!user) return;
            
            setIsLoading(true);
            
            try {
                // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                // –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –∏ –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                await new Promise(resolve => setTimeout(resolve, 1000));
                
                setStats({
                    totalChats: Math.floor(Math.random() * 15),
                    activeChats: Math.floor(Math.random() * 3),
                    lastActivity: new Date().toISOString()
                });
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
            } finally {
                setIsLoading(false);
            }
        };
        
        loadUserStats();
    }, [user]);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞
    const handleFindChat = () => {
        if (WebApp.HapticFeedback) {
            WebApp.HapticFeedback.impactOccurred('medium');
        }
        navigate('/random-chat');
    };

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —Å–µ–∫—Ü–∏—é —á–∞—Ç–æ–≤
    const handleGoToChats = () => {
        if (WebApp.HapticFeedback) {
            WebApp.HapticFeedback.impactOccurred('light');
        }
        navigate('/chats');
    };

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    const formatLastActivity = (isoDate) => {
        if (!isoDate) return '–ù–∏–∫–æ–≥–¥–∞';
        
        const date = new Date(isoDate);
        const now = new Date();
        const diffMs = now - date;
        const diffMins = Math.floor(diffMs / (1000 * 60));
        
        if (diffMins < 1) return '–¢–æ–ª—å–∫–æ —á—Ç–æ';
        if (diffMins < 60) return `${diffMins} –º–∏–Ω. –Ω–∞–∑–∞–¥`;
        
        const diffHours = Math.floor(diffMins / 60);
        if (diffHours < 24) return `${diffHours} —á. –Ω–∞–∑–∞–¥`;
        
        return date.toLocaleDateString();
    };

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫
    const getGreeting = () => {
        const hour = new Date().getHours();
        
        if (hour >= 5 && hour < 12) return '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ';
        if (hour >= 12 && hour < 18) return '–î–æ–±—Ä—ã–π –¥–µ–Ω—å';
        if (hour >= 18 && hour < 22) return '–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä';
        return '–î–æ–±—Ä–æ–π –Ω–æ—á–∏';
    };

    return (
        <div className="home-container">
            <div className="greeting-section">
                <h1 className="greeting-title">
                    {getGreeting()}, {user?.name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}!
                </h1>
                <p className="greeting-subtitle">
                    –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç
                </p>
            </div>

            {isLoading ? (
                <div className="stats-loading">
                    <div className="loading-spinner"></div>
                </div>
            ) : (
                <div className="stats-section">
                    <div className="stats-card" onClick={handleGoToChats}>
                        <div className="stats-header">
                            <h3>–í–∞—à–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h3>
                            <span className="card-arrow">‚Üí</span>
                        </div>
                        <div className="stats-grid">
                            <div className="stats-item">
                                <span className="stats-value">{stats.totalChats}</span>
                                <span className="stats-label">–í—Å–µ–≥–æ —á–∞—Ç–æ–≤</span>
                            </div>
                            <div className="stats-item">
                                <span className="stats-value">{stats.activeChats}</span>
                                <span className="stats-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö</span>
                            </div>
                            <div className="stats-item">
                                <span className="stats-value">{formatLastActivity(stats.lastActivity)}</span>
                                <span className="stats-label">–ü–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Ç</span>
                            </div>
                        </div>
                    </div>
                </div>
            )}

            <div className="quick-actions">
                <button className="action-button primary" onClick={handleFindChat}>
                    <span className="button-icon">üîç</span>
                    –ù–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
                </button>
                <button className="action-button secondary" onClick={() => navigate('/guide')}>
                    <span className="button-icon">üìñ</span>
                    –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ
                </button>
            </div>

            <div className="features-section">
                <h2 className="section-title">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h2>
                <div className="features-grid">
                    <div className="feature-card">
                        <div className="feature-icon">üîí</div>
                        <h3 className="feature-title">–ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å</h3>
                        <p className="feature-description">
                            –û–±—â–∞–π—Ç–µ—Å—å –∞–Ω–æ–Ω–∏–º–Ω–æ –±–µ–∑ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                        </p>
                    </div>
                    <div className="feature-card">
                        <div className="feature-icon">üë•</div>
                        <h3 className="feature-title">–°–ª—É—á–∞–π–Ω—ã–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∏</h3>
                        <p className="feature-description">
                            –°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–±–µ—Ä–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
                        </p>
                    </div>
                    <div className="feature-card">
                        <div className="feature-icon">üéØ</div>
                        <h3 className="feature-title">–ü–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º</h3>
                        <p className="feature-description">
                            –ù–∞—Ö–æ–¥–∏—Ç–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ —Å –æ–±—â–∏–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏
                        </p>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default Home;
