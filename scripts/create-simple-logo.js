/**
 * –ü—Ä–æ—Å—Ç–æ–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ª–æ–≥–æ—Ç–∏–ø–æ–≤ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç canvas
 * –°–æ–∑–¥–∞–µ—Ç –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã –∏–ª–∏ –∫–æ–ø–∏—Ä—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —à–∞–±–ª–æ–Ω—ã
 */
const fs = require('fs');
const path = require('path');

console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã—Ö –ª–æ–≥–æ—Ç–∏–ø–æ–≤ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è canvas...');

// –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
const publicDir = path.join(__dirname, '..', 'public');
const logo192Path = path.join(publicDir, 'logo192.png');
const logo512Path = path.join(publicDir, 'logo512.png');
const faviconPath = path.join(publicDir, 'favicon.ico');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ public
if (!fs.existsSync(publicDir)) {
    console.log('üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ public...');
    fs.mkdirSync(publicDir, { recursive: true });
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç—É—é –∏–∫–æ–Ω–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ PNG
 * @param {string} filePath - –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
 * @param {number} size - –†–∞–∑–º–µ—Ä –∏–∫–æ–Ω–∫–∏ –≤ –ø–∏–∫—Å–µ–ª—è—Ö
 */
const createSimplePngIcon = (filePath, size) => {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        if (fs.existsSync(filePath)) {
            console.log(`‚úÖ –§–∞–π–ª ${path.basename(filePath)} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —à–∞–±–ª–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ –ø–∞–ø–∫–µ assets
        const templateDir = path.join(__dirname, '..', 'src', 'assets');
        const templateFile = path.join(templateDir, `template-${size}.png`);

        if (fs.existsSync(templateFile)) {
            // –ö–æ–ø–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
            fs.copyFileSync(templateFile, filePath);
            console.log(`‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —à–∞–±–ª–æ–Ω –¥–ª—è ${path.basename(filePath)}`);
            return;
        }

        // –ï—Å–ª–∏ –Ω–µ—Ç —à–∞–±–ª–æ–Ω–∞, —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π PNG-—Ñ–∞–π–ª –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ PNG-—Ñ–∞–π–ª–∞ (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π PNG)
        const pngHeader = Buffer.from([
            0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, // PNG —Å–∏–≥–Ω–∞—Ç—É—Ä–∞
            0x00, 0x00, 0x00, 0x0D, // –î–ª–∏–Ω–∞ IHDR chunk
            0x49, 0x48, 0x44, 0x52, // IHDR chunk type
            0x00, 0x00, size >> 8, size & 0xFF, // –®–∏—Ä–∏–Ω–∞ (2 –±–∞–π—Ç–∞, big-endian)
            0x00, 0x00, size >> 8, size & 0xFF, // –í—ã—Å–æ—Ç–∞ (2 –±–∞–π—Ç–∞, big-endian)
            0x08, // –ì–ª—É–±–∏–Ω–∞ —Ü–≤–µ—Ç–∞ (8 –±–∏—Ç)
            0x06, // –¢–∏–ø —Ü–≤–µ—Ç–∞ (RGBA)
            0x00, // –ú–µ—Ç–æ–¥ —Å–∂–∞—Ç–∏—è (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π)
            0x00, // –ú–µ—Ç–æ–¥ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π)
            0x00, // –ú–µ—Ç–æ–¥ —á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏—è (–Ω–µ—Ç)
            0x00, 0x00, 0x00, 0x00, // CRC –¥–ª—è IHDR (–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π, –Ω–æ —ç—Ç–æ –Ω–µ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è placeholder)
            0x00, 0x00, 0x00, 0x00, // –î–ª–∏–Ω–∞ IDAT chunk (–ø—É—Å—Ç–æ–π)
            0x49, 0x44, 0x41, 0x54, // IDAT chunk type
            0x00, 0x00, 0x00, 0x00, // –î–∞–Ω–Ω—ã–µ IDAT (–ø—É—Å—Ç—ã–µ)
            0x00, 0x00, 0x00, 0x00, // CRC –¥–ª—è IDAT (–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π)
            0x00, 0x00, 0x00, 0x00, // –î–ª–∏–Ω–∞ IEND chunk (–ø—É—Å—Ç–æ–π)
            0x49, 0x45, 0x4E, 0x44, // IEND chunk type
            0xAE, 0x42, 0x60, 0x82  // CRC –¥–ª—è IEND
        ]);

        fs.writeFileSync(filePath, pngHeader);
        console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –ø—É—Å—Ç–æ–π PNG-—Ñ–∞–π–ª –¥–ª—è ${path.basename(filePath)}`);
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${path.basename(filePath)}:`, error);
    }
};

/**
 * –°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–π favicon.ico
 */
const createSimpleFavicon = (filePath) => {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        if (fs.existsSync(filePath)) {
            console.log(`‚úÖ –§–∞–π–ª ${path.basename(filePath)} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —à–∞–±–ª–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ –ø–∞–ø–∫–µ assets
        const templateDir = path.join(__dirname, '..', 'src', 'assets');
        const templateFile = path.join(templateDir, 'template-favicon.ico');

        if (fs.existsSync(templateFile)) {
            // –ö–æ–ø–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
            fs.copyFileSync(templateFile, filePath);
            console.log(`‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —à–∞–±–ª–æ–Ω –¥–ª—è ${path.basename(filePath)}`);
            return;
        }

        // –ï—Å–ª–∏ —à–∞–±–ª–æ–Ω–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π ICO-—Ñ–∞–π–ª –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ ICO-—Ñ–∞–π–ª–∞ (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π ICO)
        const icoHeader = Buffer.from([
            0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x10, 0x00, 0x00, 0x01, 0x00,
            0x20, 0x00, 0x68, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00
        ]);

        fs.writeFileSync(filePath, icoHeader);
        console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –ø—É—Å—Ç–æ–π ICO-—Ñ–∞–π–ª –¥–ª—è ${path.basename(filePath)}`);
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${path.basename(filePath)}:`, error);
    }
};

// –°–æ–∑–¥–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø—ã –∏ favicon
createSimplePngIcon(logo192Path, 192);
createSimplePngIcon(logo512Path, 512);
createSimpleFavicon(faviconPath);

console.log('‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—Å—Ç—ã—Ö –ª–æ–≥–æ—Ç–∏–ø–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
