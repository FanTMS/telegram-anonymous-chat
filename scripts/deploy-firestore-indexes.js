const { execSync } = require('child_process');
const path = require('path');
const fs = require('fs');

console.log('–î–µ–ø–ª–æ–π –∏–Ω–¥–µ–∫—Å–æ–≤ Firestore...');

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–Ω–¥–µ–∫—Å–æ–≤
const indexesPath = path.join(__dirname, '..', 'firestore.indexes.json');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –∏–Ω–¥–µ–∫—Å–æ–≤
if (!fs.existsSync(indexesPath)) {
    console.error('‚ùå –§–∞–π–ª –∏–Ω–¥–µ–∫—Å–æ–≤ Firestore –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    process.exit(1);
}

try {
    // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
    const dotenvPath = path.join(__dirname, '..', '.env');
    if (fs.existsSync(dotenvPath)) {
        require('dotenv').config({ path: dotenvPath });
    }

    // ID –ø—Ä–æ–µ–∫—Ç–∞ Firebase
    const projectId = process.env.REACT_APP_FIREBASE_PROJECT_ID || 'oleop-19cc2';

    // –ü–æ–ª—É—á–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã
    const indexesData = JSON.parse(fs.readFileSync(indexesPath, 'utf8'));

    console.log(`\nüìã –ò–Ω–¥–µ–∫—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã (${indexesData.indexes.length}):`);
    indexesData.indexes.forEach((index, idx) => {
        console.log(`\nüîπ –ò–Ω–¥–µ–∫—Å #${idx + 1}:`);
        console.log(`   –ö–æ–ª–ª–µ–∫—Ü–∏—è: ${index.collectionGroup}`);

        console.log('   –ü–æ–ª—è:');
        index.fields.forEach(field => {
            let fieldType = field.arrayConfig ? `ARRAY_CONTAINS (${field.arrayConfig})` :
                (field.order === 'ASCENDING' ? '‚Üë –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é' : '‚Üì –ø–æ —É–±—ã–≤–∞–Ω–∏—é');
            console.log(`     - ${field.fieldPath}: ${fieldType}`);
        });
    });

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    const readline = require('readline').createInterface({
        input: process.stdin,
        output: process.stdout
    });

    readline.question('\n‚ö†Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤? (y/n): ', (answer) => {
        readline.close();

        if (answer.toLowerCase() === 'y') {
            // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–µ–ø–ª–æ—è –∏–Ω–¥–µ–∫—Å–æ–≤
            console.log(`\nüì§ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç ${projectId}...`);
            execSync(`npx firebase deploy --only firestore:indexes --project=${projectId}`, {
                stdio: 'inherit'
            });
            console.log('\n‚úÖ –ò–Ω–¥–µ–∫—Å—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
        } else {
            console.log('\n‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
        }
    });
} catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–ø–ª–æ–µ –∏–Ω–¥–µ–∫—Å–æ–≤:', error.message);
    process.exit(1);
}
