/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ index.html –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ build
 * –ï—Å–ª–∏ —Ñ–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –æ–Ω –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ index-spa.html
 */
const fs = require('fs');
const path = require('path');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ index.html –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ build...');

const buildDir = path.join(__dirname, '..', 'build');
const indexPath = path.join(buildDir, 'index.html');
const spaIndexPath = path.join(buildDir, 'index-spa.html');

// –ü–æ–ª—É—á–∞–µ–º PUBLIC_URL –∏–∑ package.json –∏–ª–∏ .env.production
let publicUrl = '';
try {
    const packageJson = JSON.parse(fs.readFileSync(path.join(__dirname, '..', 'package.json'), 'utf8'));
    publicUrl = packageJson.homepage || '';
    
    // –£–±–µ—Ä–µ–º trailing slash –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (publicUrl && publicUrl.endsWith('/')) {
        publicUrl = publicUrl.slice(0, -1);
    }
    
    console.log(`üì¶ –ù–∞–π–¥–µ–Ω homepage: ${publicUrl}`);
} catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ package.json:', error);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ build
if (!fs.existsSync(buildDir)) {
    console.error('‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è build –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
    process.exit(1);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ index.html
if (!fs.existsSync(indexPath)) {
    console.log('‚ö†Ô∏è –§–∞–π–ª index.html –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ index-spa.html –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    if (fs.existsSync(spaIndexPath)) {
        console.log('üìÑ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ index-spa.html –≤ index.html —Å –∑–∞–º–µ–Ω–æ–π %PUBLIC_URL%...');
        // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
        let content = fs.readFileSync(spaIndexPath, 'utf8');
        
        // –ó–∞–º–µ–Ω—è–µ–º %PUBLIC_URL% –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        content = content.replace(/%PUBLIC_URL%/g, publicUrl);
        
        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ index.html
        fs.writeFileSync(indexPath, content);
        console.log('‚úÖ –§–∞–π–ª index.html —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —Å –∑–∞–º–µ–Ω–æ–π %PUBLIC_URL%');
    } else {
        console.log('üìù –§–∞–π–ª index-spa.html –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π index.html...');
        
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π index.html —Å —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–º –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        const basicHtml = `<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Telegram Anonymous Chat</title>
    <base href="/" />
    <link rel="icon" href="${publicUrl}/favicon.ico" />
    <link rel="manifest" href="${publicUrl}/manifest.json" />
    <script>
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        window.location.href = '/register';
    </script>
</head>
<body>
    <noscript>–î–ª—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–∫–ª—é—á–∏—Ç—å JavaScript.</noscript>
    <div id="root"></div>
</body>
</html>`;

        fs.writeFileSync(indexPath, basicHtml);
        console.log('‚úÖ –°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π index.html —Å —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–º');
    }
} else {
    // –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –≤ –Ω–µ–º %PUBLIC_URL% –∏ –∑–∞–º–µ–Ω–∏–º –∏—Ö
    let content = fs.readFileSync(indexPath, 'utf8');
    if (content.includes('%PUBLIC_URL%')) {
        console.log('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω —à–∞–±–ª–æ–Ω %PUBLIC_URL% –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º index.html, –∑–∞–º–µ–Ω—è–µ–º...');
        content = content.replace(/%PUBLIC_URL%/g, publicUrl);
        fs.writeFileSync(indexPath, content);
        console.log('‚úÖ %PUBLIC_URL% –∑–∞–º–µ–Ω–µ–Ω –Ω–∞', publicUrl);
    } else {
        console.log('‚úÖ –§–∞–π–ª index.html —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —à–∞–±–ª–æ–Ω–æ–≤');
    }
}

console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ index.html –∑–∞–≤–µ—Ä—à–µ–Ω–∞'); 