import React from 'react';
import '../styles/InterestSelector.css';

// –ü—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã –¥–ª—è –≤—ã–±–æ—Ä–∞
const PREDEFINED_INTERESTS = [
    { id: 'music', name: '–ú—É–∑—ã–∫–∞', icon: 'üéµ' },
    { id: 'sports', name: '–°–ø–æ—Ä—Ç', icon: '‚öΩ' },
    { id: 'gaming', name: '–ò–≥—Ä—ã', icon: 'üéÆ' },
    { id: 'movies', name: '–ö–∏–Ω–æ', icon: 'üé¨' },
    { id: 'books', name: '–ö–Ω–∏–≥–∏', icon: 'üìö' },
    { id: 'travel', name: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', icon: '‚úàÔ∏è' },
    { id: 'cooking', name: '–ö—É–ª–∏–Ω–∞—Ä–∏—è', icon: 'üç≥' },
    { id: 'tech', name: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', icon: 'üíª' },
    { id: 'art', name: '–ò—Å–∫—É—Å—Å—Ç–≤–æ', icon: 'üé®' },
    { id: 'nature', name: '–ü—Ä–∏—Ä–æ–¥–∞', icon: 'üå≤' },
    { id: 'science', name: '–ù–∞—É–∫–∞', icon: 'üî¨' },
    { id: 'history', name: '–ò—Å—Ç–æ—Ä–∏—è', icon: 'üèõÔ∏è' }
];

const InterestSelector = ({ value = [], onChange }) => {
    // Ensure value is always an array
    const normalizedValue = Array.isArray(value) ? value : [];

    const handleToggleInterest = (interestId) => {
        const selectedInterests = [...normalizedValue];
        const index = selectedInterests.findIndex(interest => 
            typeof interest === 'string' ? interest === interestId : interest.id === interestId
        );
        
        if (index !== -1) {
            // –£–¥–∞–ª–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å, –µ—Å–ª–∏ –æ–Ω —É–∂–µ –≤—ã–±—Ä–∞–Ω
            selectedInterests.splice(index, 1);
        } else {
            // –î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å, –µ—Å–ª–∏ –æ–Ω –µ—â–µ –Ω–µ –≤—ã–±—Ä–∞–Ω –∏ –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç
            if (selectedInterests.length < 5) {
                selectedInterests.push(interestId);
            }
        }
        
        onChange(selectedInterests);
    };

    const isSelected = (interestId) => {
        return normalizedValue.some(interest => 
            typeof interest === 'string' ? interest === interestId : interest.id === interestId
        );
    };

    return (
        <div className="interest-selector">
            <div className="interests-grid">
                {PREDEFINED_INTERESTS.map((interest) => (
                    <div
                        key={interest.id}
                        className={`interest-item ${isSelected(interest.id) ? 'selected' : ''}`}
                        onClick={() => handleToggleInterest(interest.id)}
                    >
                        <div className="interest-icon">{interest.icon}</div>
                        <div className="interest-name">{interest.name}</div>
                        {isSelected(interest.id) && (
                            <div className="interest-select-indicator">‚úì</div>
                        )}
                    </div>
                ))}
            </div>
            {normalizedValue.length === 5 && (
                <div className="interest-limit-message">–ú–∞–∫—Å–∏–º—É–º 5 –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤</div>
            )}
        </div>
    );
};

export default InterestSelector;
