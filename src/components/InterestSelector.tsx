import React, { useState, useEffect } from 'react';
import { motion } from 'framer-motion';

interface InterestSelectorProps {
    selectedInterests: string[];
    // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –ø—Ä–æ–ø—Å–æ–≤ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    onSelectInterest?: (interests: string[]) => void;
    onChange?: (interests: string[]) => void;
    maxSelections?: number;
}

export const InterestSelector: React.FC<InterestSelectorProps> = ({
    selectedInterests = [],
    onSelectInterest,
    onChange,
    maxSelections = 10
}) => {
    // –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ —Å –∏–∫–æ–Ω–∫–∞–º–∏
    const availableInterests = [
        { icon: 'üéµ', name: '–ú—É–∑—ã–∫–∞' },
        { icon: 'üé¨', name: '–ö–∏–Ω–æ' },
        { icon: 'üìö', name: '–ö–Ω–∏–≥–∏' },
        { icon: '‚öΩ', name: '–°–ø–æ—Ä—Ç' },
        { icon: '‚úàÔ∏è', name: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è' },
        { icon: 'üçï', name: '–ö—É–ª–∏–Ω–∞—Ä–∏—è' },
        { icon: 'üê∂', name: '–ñ–∏–≤–æ—Ç–Ω—ã–µ' },
        { icon: 'üéÆ', name: '–ò–≥—Ä—ã' },
        { icon: 'üíª', name: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏' },
        { icon: 'üé®', name: '–ò—Å–∫—É—Å—Å—Ç–≤–æ' },
        { icon: 'üî¨', name: '–ù–∞—É–∫–∞' },
        { icon: 'üåø', name: '–ü—Ä–∏—Ä–æ–¥–∞' },
        { icon: 'üëó', name: '–ú–æ–¥–∞' },
        { icon: 'üí™', name: '–§–∏—Ç–Ω–µ—Å' },
        { icon: 'üì∑', name: '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è' }
    ];

    // –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤
    const [selected, setSelected] = useState<string[]>(selectedInterests);

    // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤—Ö–æ–¥–Ω—ã—Ö –ø—Ä–æ–ø–æ–≤
    useEffect(() => {
        setSelected(selectedInterests);
    }, [selectedInterests]);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∏–Ω—Ç–µ—Ä–µ—Å–∞
    const handleToggleInterest = (interest: string) => {
        let newSelected: string[];

        if (selected.includes(interest)) {
            // –£–¥–∞–ª—è–µ–º –∏–Ω—Ç–µ—Ä–µ—Å, –µ—Å–ª–∏ –æ–Ω —É–∂–µ –≤—ã–±—Ä–∞–Ω
            newSelected = selected.filter(item => item !== interest);
        } else {
            // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–µ—Å, –µ—Å–ª–∏ –æ–Ω –Ω–µ –≤—ã–±—Ä–∞–Ω –∏ –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º
            if (selected.length < maxSelections) {
                newSelected = [...selected, interest];
            } else {
                // –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–µ—Å
                console.log(`–î–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º –≤—ã–±–æ—Ä–∞ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤: ${maxSelections}`);
                return;
            }
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        setSelected(newSelected);

        // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
        if (onSelectInterest) onSelectInterest(newSelected);
        if (onChange) onChange(newSelected);
    };

    return (
        <div className="flex flex-wrap gap-2">
            {availableInterests.map(({ icon, name }) => {
                const isSelected = selected.includes(name);

                return (
                    <motion.div
                        key={name}
                        whileHover={{ scale: 1.05 }}
                        whileTap={{ scale: 0.95 }}
                        onClick={() => handleToggleInterest(name)}
                        className={`cursor-pointer flex flex-col items-center p-2 rounded-lg transition-colors ${isSelected
                            ? 'bg-blue-100 text-blue-700 border-blue-300 dark:bg-blue-900 dark:text-blue-300 dark:border-blue-700'
                            : 'bg-gray-100 hover:bg-gray-200 text-gray-700 border-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-gray-300 dark:border-gray-600'
                            } border shadow-sm`}
                    >
                        <div className="text-xl mb-1">{icon}</div>
                        <div className="text-xs font-medium text-center">{name}</div>
                    </motion.div>
                );
            })}
        </div>
    );
};

export default InterestSelector;
