import React, { useState, useEffect } from 'react';
import '../styles/OnboardingTutorial.css';
// –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç —Ö—É–∫–∞ useTelegram
import { useTelegram } from '../hooks/useTelegram';
// –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram
import { setupMainButton, hideMainButton, triggerHapticFeedback } from '../utils/telegramUtils';
// –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —á–∞—Ç–∞–º–∏
import { findRandomChat } from '../utils/chatService';

// –ü—Ä–∏–º–µ—Ä—ã –Ω–∞—á–∞–ª–∞ –æ–±—â–µ–Ω–∏—è
const chatExamples = [
    {
        title: '–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –Ω–∞—á–∞–ª–æ',
        icon: 'üëã',
        messages: [
            "–ü—Ä–∏–≤–µ—Ç! –†–∞–¥(–∞) –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è. –ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞ —Å–µ–≥–æ–¥–Ω—è?",
            "–ü—Ä–∏–≤–µ—Ç! –ß–µ–º –æ–±—ã—á–Ω–æ –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è –≤ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è?"
        ]
    },
    {
        title: '–ù–∞—á–∞–ª–æ —Å –æ–±—â–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤',
        icon: 'üé≠',
        messages: [
            "–ü—Ä–∏–≤–µ—Ç! –ó–∞–º–µ—Ç–∏–ª(–∞), —á—Ç–æ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –º—É–∑—ã–∫–∞. –ö–∞–∫–∏–µ –≥—Ä—É–ø–ø—ã —Å–ª—É—à–∞–µ—à—å –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è?",
            "–ü—Ä–∏–≤–µ—Ç! –í–∏–∂—É, —Ç—ã –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—à—å—Å—è –∫–∏–Ω–æ. –ö–∞–∫–æ–π —Ñ–∏–ª—å–º –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?"
        ]
    },
    {
        title: '–ù–∞—á–∞–ª–æ —Å –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞',
        icon: 'üí≠',
        messages: [
            "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ-–Ω–∏–±—É–¥—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ —Å–ª—É—á–∏–ª–æ—Å—å —Å —Ç–æ–±–æ–π –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ?",
            "–ü—Ä–∏–≤–µ—Ç! –ï—Å–ª–∏ –±—ã —Ç—ã –º–æ–≥(–ª–∞) –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å–µ–π—á–∞—Å –≤ –ª—é–±—É—é —Ç–æ—á–∫—É –º–∏—Ä–∞, –∫—É–¥–∞ –±—ã –ø–æ–µ—Ö–∞–ª(–∞)?"
        ]
    }
];

// –ü—Ä–∏–º–µ—Ä—ã —É—Å–ø–µ—à–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤
const successfulDialogues = [
    {
        title: '–†–∞–∑–≥–æ–≤–æ—Ä –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö',
        icon: '‚úàÔ∏è',
        dialogue: [
            { sender: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1', message: '–ü—Ä–∏–≤–µ—Ç! –¢—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞–ª(–∞) –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É?' },
            { sender: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2', message: '–ü—Ä–∏–≤–µ—Ç! –î–∞, –±—ã–ª(–∞) –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∞—Ö –ï–≤—Ä–æ–ø—ã. –ê —Ç—ã?' },
            { sender: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1', message: '–ü–æ–∫–∞ —Ç–æ–ª—å–∫–æ –º–µ—á—Ç–∞—é. –ö–∞–∫–∞—è —Å—Ç—Ä–∞–Ω–∞ —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?' },
            { sender: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2', message: '–ò—Ç–∞–ª–∏—è! –ù–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞, –≤–∫—É—Å–Ω–∞—è –µ–¥–∞ –∏ —Å—Ç–æ–ª—å–∫–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –º–µ—Å—Ç!' },
            { sender: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1', message: '–ö—Ä—É—Ç–æ! –ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞–º —Å–æ–≤–µ—Ç—É–µ—à—å?' },
            { sender: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2', message: '–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ –†–∏–º, –§–ª–æ—Ä–µ–Ω—Ü–∏—é –∏ –í–µ–Ω–µ—Ü–∏—é. –í –∫–∞–∂–¥–æ–º –≥–æ—Ä–æ–¥–µ —Å–≤–æ—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –∏ –∏—Å—Ç–æ—Ä–∏—è.' }
        ]
    },
    {
        title: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ –∫–Ω–∏–≥',
        icon: 'üìö',
        dialogue: [
            { sender: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1', message: '–ü—Ä–∏–≤–µ—Ç! –õ—é–±–∏—à—å —á–∏—Ç–∞—Ç—å? –ö–∞–∫—É—é –∫–Ω–∏–≥—É —Å–µ–π—á–∞—Å —á–∏—Ç–∞–µ—à—å?' },
            { sender: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2', message: '–ü—Ä–∏–≤–µ—Ç! –î–∞, –æ–±–æ–∂–∞—é! –°–µ–π—á–∞—Å —á–∏—Ç–∞—é "–ú–∞—Å—Ç–µ—Ä –∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞". –ê —Ç—ã?' },
            { sender: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1', message: '–û, –∫–ª–∞—Å—Å–∏–∫–∞! –Ø –Ω–µ–¥–∞–≤–Ω–æ –∑–∞–∫–æ–Ω—á–∏–ª(–∞) "1984" –û—Ä—É—ç–ª–ª–∞. –í–ø–µ—á–∞—Ç–ª—è–µ—Ç, –Ω–æ –Ω–µ–º–Ω–æ–≥–æ –º—Ä–∞—á–Ω–æ.' },
            { sender: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2', message: '–°–æ–≥–ª–∞—à—É—Å—å, —Å–∏–ª—å–Ω–∞—è –∫–Ω–∏–≥–∞. –ö–∞–∫–æ–π –∂–∞–Ω—Ä –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã —Ç–µ–±–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –Ω—Ä–∞–≤–∏—Ç—Å—è?' },
            { sender: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1', message: '–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞ –∏ –Ω–∞—É—á–Ω–∞—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞. –ê –µ—â—ë –∏–Ω–æ–≥–¥–∞ –¥–µ—Ç–µ–∫—Ç–∏–≤—ã.' },
            { sender: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2', message: '–£ –Ω–∞—Å –ø–æ—Ö–æ–∂–∏–µ –≤–∫—É—Å—ã! –ú–æ–≥—É –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å —Å–µ—Ä–∏—é "–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ" - –æ—Ç–ª–∏—á–Ω–∞—è –Ω–∞—É—á–Ω–∞—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞.' }
        ]
    }
];

// –í–æ–ø—Ä–æ—Å—ã –¥–ª—è –º–∏–Ω–∏-—Ç–µ—Å—Ç–∞
const quizQuestions = [
    {
        question: "–ö–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –ª—É—á—à–µ –≤—Å–µ–≥–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏ –Ω–∞—á–∞–ª–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Å –Ω–æ–≤—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º?",
        options: [
            "–ó–∞–¥–∞—Ç—å –ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å –æ —Å–µ–º—å–µ –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö",
            "–ù–∞—á–∞—Ç—å —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∏–ª–∏ –æ–±—â–µ–π —Ç–µ–º—ã",
            "–°—Ä–∞–∑—É –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏, —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å —Å–æ—á—É–≤—Å—Ç–≤–∏–µ",
            "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–¥—Ä—è–¥, —á—Ç–æ–±—ã –ø—Ä–∏–≤–ª–µ—á—å –≤–Ω–∏–º–∞–Ω–∏–µ"
        ],
        correctAnswer: 1
    },
    {
        question: "–ß—Ç–æ –ù–ï —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–µ–ª–∞—Ç—å –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –æ–±—â–µ–Ω–∏—è?",
        options: [
            "–ü—Ä–æ—è–≤–ª—è—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å –∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É",
            "–ó–∞–¥–∞–≤–∞—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã",
            "–ü–∏—Å–∞—Ç—å —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –ª–∏—á–Ω—ã—Ö –¥–µ—Ç–∞–ª–µ–π",
            "–£–ø–æ–º–∏–Ω–∞—Ç—å –æ–±—â–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã"
        ],
        correctAnswer: 2
    },
    {
        question: "–ö–∞–∫–æ–π –∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤ —è–≤–ª—è–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ —É–¥–∞—á–Ω—ã–º –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞?",
        options: [
            "–ü—Ä–∏–≤–µ—Ç, —Ç—ã –∫—Ä–∞—Å–∏–≤–∞—è/–∫—Ä–∞—Å–∏–≤—ã–π, —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?",
            "–ü—Ä–∏–≤–µ—Ç! –ß–µ–º —É–≤–ª–µ–∫–∞–µ—à—å—Å—è –≤ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è?",
            "–ü—Ä–∏–≤–µ—Ç! –ü–æ—á–µ–º—É —Ç–∞–∫ –¥–æ–ª–≥–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—à—å?",
            "–ü—Ä–∏–≤–µ—Ç, –º–æ–∂–µ—à—å —Å–∫–∏–Ω—É—Ç—å —Å–≤–æ–µ —Ñ–æ—Ç–æ?"
        ],
        correctAnswer: 1
    },
    {
        question: "–ö–∞–∫ –ª—É—á—à–µ –≤—Å–µ–≥–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º?",
        options: [
            "–ó–∞–¥–∞–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∑–∞–∫—Ä—ã—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –¥–∞/–Ω–µ—Ç",
            "–ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Ç–µ–º—É, –µ—Å–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ —É–≤–ª–µ–∫—Å—è —Ä–∞—Å—Å–∫–∞–∑–æ–º",
            "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏—Å–∫—Ä–µ–Ω–Ω–∏–π –∏–Ω—Ç–µ—Ä–µ—Å –∏ –∑–∞–¥–∞–≤–∞—Ç—å —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ç–µ–º–µ",
            "–û—Ç–≤–µ—á–∞—Ç—å –æ–¥–Ω–æ—Å–ª–æ–∂–Ω–æ, —á—Ç–æ–±—ã —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –±–æ–ª—å—à–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–ª –æ —Å–µ–±–µ"
        ],
        correctAnswer: 2
    },
    {
        question: "–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä –∑–∞—à–µ–ª –≤ —Ç—É–ø–∏–∫?",
        options: [
            "–°—Ä–∞–∑—É –∑–∞–≤–µ—Ä—à–∏—Ç—å –±–µ—Å–µ–¥—É",
            "–ü—Ä–æ–¥–æ–ª–∂–∞—Ç—å –Ω–∞—Å—Ç–∞–∏–≤–∞—Ç—å –Ω–∞ –ø—Ä–µ–∂–Ω–µ–π —Ç–µ–º–µ",
            "–ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Ç–µ–º—É, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å —É–≤–ª–µ—á–µ–Ω–∏—è–º–∏ –∏–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏",
            "–ú–æ–ª—á–∞—Ç—å –∏ –∂–¥–∞—Ç—å, –ø–æ–∫–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –Ω–æ–≤—É—é —Ç–µ–º—É"
        ],
        correctAnswer: 2
    }
];

const OnboardingTutorial = ({ onComplete }) => {
    const { isTelegramApp, WebApp } = useTelegram();

    const [activeStep, setActiveStep] = useState(0);
    const [answers, setAnswers] = useState({});
    const [quizSubmitted, setQuizSubmitted] = useState(false);
    const [quizScore, setQuizScore] = useState(0);
    const [showAlert, setShowAlert] = useState(false);
    const [alertMessage, setAlertMessage] = useState('');
    const [selectedDialogue, setSelectedDialogue] = useState(null);
    const [darkMode, setDarkMode] = useState(false);

    const steps = [
        { title: '–í–≤–µ–¥–µ–Ω–∏–µ', icon: 'üìù' },
        { title: '–ü—Ä–∏–º–µ—Ä—ã', icon: 'üí¨' },
        { title: '–î–∏–∞–ª–æ–≥–∏', icon: 'üë•' },
        { title: '–¢–µ—Å—Ç', icon: '‚úÖ' },
        { title: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã', icon: 'üèÜ' }
    ];

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–≤–µ—Ç–æ–≤—É—é —Å—Ö–µ–º—É Telegram
    useEffect(() => {
        if (isTelegramApp && WebApp) {
            setDarkMode(WebApp.colorScheme === 'dark');
        } else {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –≤–µ–±-–≤–µ—Ä—Å–∏–∏
            const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
            setDarkMode(prefersDark);
        }
        
        // –°–ª—É—à–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
        const handleThemeChange = () => {
            if (isTelegramApp && WebApp) {
                setDarkMode(WebApp.colorScheme === 'dark');
            }
        };
        
        if (isTelegramApp && WebApp) {
            WebApp.onEvent('themeChanged', handleThemeChange);
        }
        
        return () => {
            if (isTelegramApp && WebApp) {
                WebApp.offEvent('themeChanged', handleThemeChange);
            }
        };
    }, [isTelegramApp, WebApp]);

    const handleNext = () => {
        try {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Ç–µ—Å—Ç
            if (activeStep === 3 && !quizSubmitted) {
                if (Object.keys(answers).length < quizQuestions.length) {
                    setAlertMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã —Ç–µ—Å—Ç–∞');
                    setShowAlert(true);
                    
                    if (isTelegramApp) {
                        triggerHapticFeedback('error');
                    }
                    
                    return;
                }

                // –ü–æ–¥—Å—á–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
                let score = 0;
                quizQuestions.forEach((q, index) => {
                    if (answers[index] === q.correctAnswer) {
                        score++;
                    }
                });

                setQuizScore(score);
                setQuizSubmitted(true);
                
                if (isTelegramApp) {
                    triggerHapticFeedback('success');
                }
            }
            
            // –ï—Å–ª–∏ –ø—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –Ω–æ —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω
            if (activeStep === 3 && !quizSubmitted) {
                return;
            }

            // –ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ - –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ
            if (activeStep === steps.length - 1) {
                if (isTelegramApp) {
                    triggerHapticFeedback('medium');
                }
                
                if (onComplete) {
                    onComplete();
                }
            } else {
                if (isTelegramApp) {
                    triggerHapticFeedback('light');
                }
                
                setActiveStep((prevStep) => prevStep + 1);
            }
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É:", error);
        }
    };

    const handleBack = () => {
        try {
            if (isTelegramApp) {
                triggerHapticFeedback('light');
            }
            
            setActiveStep((prevStep) => prevStep - 1);
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É:", error);
        }
    };

    const handleAnswerChange = (questionIndex, optionIndex) => {
        if (isTelegramApp) {
            triggerHapticFeedback('selection');
        }
        
        setAnswers({
            ...answers,
            [questionIndex]: optionIndex
        });
    };

    const handleAlertClose = () => {
        setShowAlert(false);
    };

    const showFullDialogue = (index) => {
        if (isTelegramApp) {
            triggerHapticFeedback('light');
        }
        
        setSelectedDialogue(index);
    };

    const closeFullDialogue = () => {
        if (isTelegramApp) {
            triggerHapticFeedback('light');
        }
        
        setSelectedDialogue(null);
    };

    // –í—ã–±–æ—Ä –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —à–∞–≥–∞ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞
    const goToStep = (stepIndex) => {
        if (isTelegramApp) {
            triggerHapticFeedback('light');
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–∫–ª–∞–¥–∫–µ "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã"
        if (stepIndex === 4 && !quizSubmitted) {
            setAlertMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Ç–µ—Å—Ç');
            setShowAlert(true);
            
            if (isTelegramApp) {
                triggerHapticFeedback('error');
            }
            return;
        }
        
        setActiveStep(stepIndex);
    };

    // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —à–∞–≥–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const renderSteps = () => {
        return (
            <div className="tg-tutorial-tabs">
                {steps.map((step, index) => (
                    <div 
                        key={index}
                        className={`tg-tutorial-tab ${activeStep === index ? 'active' : ''} ${index === 4 && !quizSubmitted ? 'disabled' : ''}`}
                        onClick={() => goToStep(index)}
                    >
                        {step.title}
                    </div>
                ))}
                <div className="tg-tab-indicator" style={{ left: `${(activeStep / steps.length) * 100}%` }}></div>
            </div>
        );
    };

    // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞
    const renderStepContent = () => {
        switch (activeStep) {
            case 0: // –í–≤–µ–¥–µ–Ω–∏–µ
                return (
                    <div className="tg-step-content">
                        <div className="tg-step-header">
                            <div className="tg-step-icon">{steps[activeStep].icon}</div>
                            <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç!</h2>
                        </div>
                        
                        <p className="tg-step-description">
                            –≠—Ç–æ –∫—Ä–∞—Ç–∫–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, –∫–∞–∫ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤.
                        </p>
                        
                        <div className="tg-content-card">
                            <p>
                                <strong>–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç</strong> ‚Äî —ç—Ç–æ —Å–µ—Ä–≤–∏—Å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º –æ–±—â–∞—Ç—å—Å—è —Å –Ω–µ–∑–Ω–∞–∫–æ–º—ã–º–∏ –ª—é–¥—å–º–∏ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É, —Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä–∏ —ç—Ç–æ–º –≤–∞—à—É –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å.
                            </p>
                            <p>
                                –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Ö–æ–¥–∏—Ç—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º, –≤–µ—Å—Ç–∏ –∫–∞–∫ –∫–æ—Ä–æ—Ç–∫–∏–µ, —Ç–∞–∫ –∏ –¥–ª–∏—Ç–µ–ª—å–Ω—ã–µ –±–µ—Å–µ–¥—ã –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ä–∞—Å–∫—Ä—ã–≤–∞—Ç—å —Å–≤–æ—é –ª–∏—á–Ω–æ—Å—Ç—å.
                            </p>
                        </div>
                        
                        <div className="tg-content-card">
                            <p>
                                <strong>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</strong>
                            </p>
                            <p>
                                1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞" –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ
                            </p>
                            <p>
                                2. –î–æ–∂–¥–∏—Ç–µ—Å—å, –ø–æ–∫–∞ —Å–∏—Å—Ç–µ–º–∞ –Ω–∞–π–¥–µ—Ç –≤–∞–º –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
                            </p>
                            <p>
                                3. –ù–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –±–µ—Å–µ–¥–æ–π!
                            </p>
                        </div>
                        
                        <div className="tg-tip-block">
                            <div className="tg-tip-icon">üí°</div>
                            <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –º–µ–∂–¥—É —ç—Ç–∞–ø–∞–º–∏ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞.</p>
                        </div>
                    </div>
                );

            case 1: // –ü—Ä–∏–º–µ—Ä—ã
                return (
                    <div className="tg-step-content">
                        <div className="tg-step-header">
                            <div className="tg-step-icon">{steps[activeStep].icon}</div>
                            <h2>–ü—Ä–∏–º–µ—Ä—ã –Ω–∞—á–∞–ª–∞ –æ–±—â–µ–Ω–∏—è</h2>
                        </div>
                        
                        <p className="tg-step-description">
                            –ù–∞—á–∞—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä –∏–Ω–æ–≥–¥–∞ –±—ã–≤–∞–µ—Ç —Å–ª–æ–∂–Ω–æ. –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –Ω–∞—á–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –¥–∏–∞–ª–æ–≥:
                        </p>
                        
                        <div className="tg-examples-grid">
                            {chatExamples.map((example, index) => (
                                <div className="tg-example-card" key={index}>
                                    <div className="tg-example-header">
                                        <div className="tg-example-icon">{example.icon}</div>
                                        <h3>{example.title}</h3>
                                    </div>
                                    <div className="tg-example-content">
                                        {example.messages.map((message, msgIndex) => (
                                            <div className="tg-example-message" key={msgIndex}>
                                                <div className="tg-message-bubble">{message}</div>
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            ))}
                        </div>
                        
                        <div className="tg-tip-block">
                            <div className="tg-tip-icon">üí°</div>
                            <p>–ó–∞–¥–∞–≤–∞–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç–∞, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ "–¥–∞" –∏–ª–∏ "–Ω–µ—Ç".</p>
                        </div>
                    </div>
                );

            case 2: // –î–∏–∞–ª–æ–≥–∏
                return (
                    <div className="tg-step-content">
                        <div className="tg-step-header">
                            <div className="tg-step-icon">{steps[activeStep].icon}</div>
                            <h2>–ü—Ä–∏–º–µ—Ä—ã —É—Å–ø–µ—à–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤</h2>
                        </div>
                        
                        <p className="tg-step-description">
                            –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ –º–æ–≥—É—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –±–µ—Å–µ–¥—ã. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ª—é–±–æ–π –ø—Ä–∏–º–µ—Ä, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–ª–Ω—ã–π –¥–∏–∞–ª–æ–≥:
                        </p>
                        
                        <div className="tg-dialogues-list">
                            {successfulDialogues.map((dialogue, index) => (
                                <div 
                                    className="tg-dialogue-card" 
                                    key={index}
                                    onClick={() => showFullDialogue(index)}
                                >
                                    <div className="tg-dialogue-icon">{dialogue.icon}</div>
                                    <div className="tg-dialogue-info">
                                        <h3>{dialogue.title}</h3>
                                        <p>{dialogue.dialogue.length} —Å–æ–æ–±—â–µ–Ω–∏–π ¬∑ –ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å</p>
                                    </div>
                                    <div className="tg-dialogue-arrow">‚Üí</div>
                                </div>
                            ))}
                        </div>
                        
                        <div className="tg-tip-block">
                            <div className="tg-tip-icon">üí°</div>
                            <p>–•–æ—Ä–æ—à–∞—è –±–µ—Å–µ–¥–∞ ‚Äî —ç—Ç–æ –æ–±–º–µ–Ω –º–Ω–µ–Ω–∏—è–º–∏ –∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏. –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É —Ä–∞—Å—Å–∫–∞–∑–æ–º –æ —Å–µ–±–µ –∏ –ø—Ä–æ—è–≤–ª–µ–Ω–∏–µ–º –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É.</p>
                        </div>
                    </div>
                );

            case 3: // –¢–µ—Å—Ç
                return (
                    <div className="tg-step-content">
                        <div className="tg-step-header">
                            <div className="tg-step-icon">{steps[activeStep].icon}</div>
                            <h2>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è</h2>
                        </div>
                        
                        <p className="tg-step-description">
                            –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∫–∞–∫ —Ö–æ—Ä–æ—à–æ –≤—ã —É—Å–≤–æ–∏–ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª:
                        </p>
                        
                        <div className="tg-quiz-container">
                            {quizQuestions.map((question, qIndex) => (
                                <div className="tg-quiz-question" key={qIndex}>
                                    <div className="tg-question-text">
                                        <span className="tg-question-number">{qIndex + 1}.</span> {question.question}
                                    </div>
                                    <div className="tg-options-list">
                                        {question.options.map((option, oIndex) => (
                                            <div 
                                                className={`tg-option ${answers[qIndex] === oIndex ? 'selected' : ''} ${
                                                    quizSubmitted 
                                                        ? (oIndex === question.correctAnswer ? 'correct' : answers[qIndex] === oIndex ? 'incorrect' : '') 
                                                        : ''
                                                }`}
                                                key={oIndex}
                                                onClick={() => !quizSubmitted && handleAnswerChange(qIndex, oIndex)}
                                            >
                                                <div className="tg-option-marker">
                                                    {quizSubmitted && oIndex === question.correctAnswer && '‚úì'}
                                                    {quizSubmitted && answers[qIndex] === oIndex && oIndex !== question.correctAnswer && '‚úó'}
                                                </div>
                                                <div className="tg-option-text">{option}</div>
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            ))}
                        </div>
                        
                        {quizSubmitted && (
                            <div className={`tg-quiz-result ${quizScore === quizQuestions.length ? 'perfect' : ''}`}>
                                <div className="tg-quiz-score-icon">
                                    {quizScore === quizQuestions.length ? 'üèÜ' : 'üìù'}
                                </div>
                                <div className="tg-quiz-score">
                                    <h3>–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</h3>
                                    <div className="tg-score-text">{quizScore} –∏–∑ {quizQuestions.length}</div>
                                    <p className="tg-score-message">
                                        {quizScore === quizQuestions.length 
                                            ? '–û—Ç–ª–∏—á–Ω–æ! –í—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é —É—Å–≤–æ–∏–ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª.' 
                                            : quizScore > quizQuestions.length / 2 
                                                ? '–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —Å –æ—à–∏–±–∫–∞–º–∏.' 
                                                : '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞.'}
                                    </p>
                                </div>
                            </div>
                        )}
                    </div>
                );

            case 4: // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
                return (
                    <div className="tg-step-content">
                        <div className="tg-step-header">
                            <div className="tg-step-icon">{steps[activeStep].icon}</div>
                            <h2>–ì–æ—Ç–æ–≤—ã –∫ –æ–±—â–µ–Ω–∏—é!</h2>
                        </div>
                        
                        <div className="tg-completion-content">
                            <div className="tg-completion-icon">üéâ</div>
                            
                            <p>
                                –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø—Ä–æ—à–ª–∏ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ê–Ω–æ–Ω–∏–º–Ω–æ–≥–æ —á–∞—Ç–∞.
                                –¢–µ–ø–µ—Ä—å –≤—ã –∑–Ω–∞–µ—Ç–µ –æ—Å–Ω–æ–≤—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –Ω–∞—Ö–æ–¥–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –∏ –≤–µ—Å—Ç–∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –±–µ—Å–µ–¥—ã.
                            </p>
                            
                            <div className="tg-quiz-result-summary">
                                <h3>–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞:</h3>
                                <div className="tg-score-text">{quizScore} –∏–∑ {quizQuestions.length} ({Math.round(quizScore / quizQuestions.length * 100)}%)</div>
                                <p className="tg-score-message">
                                    {quizScore === quizQuestions.length 
                                        ? '–û—Ç–ª–∏—á–Ω–æ! –í—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é —É—Å–≤–æ–∏–ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª.' 
                                        : quizScore > quizQuestions.length / 2 
                                            ? '–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–º—ã.' 
                                            : '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞.'}
                                </p>
                            </div>
                            
                            <div className="tg-key-points">
                                <h3>–ö–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã:</h3>
                                <ul>
                                    <li>
                                        <div className="tg-point-icon">üë§</div>
                                        –£–≤–∞–∂–∞–π—Ç–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
                                    </li>
                                    <li>
                                        <div className="tg-point-icon">‚ùì</div>
                                        –ó–∞–¥–∞–≤–∞–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã
                                    </li>
                                    <li>
                                        <div className="tg-point-icon">üëÇ</div>
                                        –ü—Ä–æ—è–≤–ª—è–π—Ç–µ –∏—Å–∫—Ä–µ–Ω–Ω–∏–π –∏–Ω—Ç–µ—Ä–µ—Å
                                    </li>
                                </ul>
                            </div>
                            
                            <p className="tg-final-message">
                                –ñ–µ–ª–∞–µ–º –≤–∞–º –ø—Ä–∏—è—Ç–Ω—ã—Ö –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –±–µ—Å–µ–¥!
                            </p>
                        </div>
                    </div>
                );

            default:
                return null;
        }
    };

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    const containerClasses = `tg-tutorial-container ${darkMode ? 'dark-mode' : 'light-mode'}`;

    return (
        <div className={containerClasses}>
            {/* –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–∞–±—ã */}
            {renderSteps()}
            
            {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞ */}
            <div className="tg-step-container">
                {renderStepContent()}
            </div>
            
            {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º */}
            {showAlert && (
                <div className="tg-alert">
                    <div className="tg-alert-content">
                        <div className="tg-alert-icon">‚ö†Ô∏è</div>
                        <div className="tg-alert-message">{alertMessage}</div>
                        <button className="tg-alert-close" onClick={handleAlertClose}>
                            OK
                        </button>
                    </div>
                </div>
            )}
            
            {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –¥–∏–∞–ª–æ–≥–æ–º */}
            {selectedDialogue !== null && (
                <div className="tg-dialogue-modal">
                    <div className="tg-dialogue-modal-content">
                        <div className="tg-dialogue-modal-header">
                            <h3>{successfulDialogues[selectedDialogue].title}</h3>
                            <button className="tg-dialogue-close-btn" onClick={closeFullDialogue}>‚úï</button>
                        </div>
                        <div className="tg-dialogue-messages">
                            {successfulDialogues[selectedDialogue].dialogue.map((msg, i) => (
                                <div key={i} className={`tg-dialogue-message ${i % 2 === 0 ? 'user1' : 'user2'}`}>
                                    <div className="tg-message-sender">{msg.sender}</div>
                                    <div className="tg-message-bubble">{msg.message}</div>
                                </div>
                            ))}
                        </div>
                    </div>
                </div>
            )}
            
            {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
            <div className="tg-navigation-buttons">
                <button
                    className="tg-nav-button tg-back-button"
                    onClick={handleBack}
                    disabled={activeStep === 0}
                >
                    –ù–∞–∑–∞–¥
                </button>
                
                <div className="tg-progress-dots">
                    {steps.map((_, index) => (
                        <div 
                            key={index}
                            className={`tg-progress-dot ${activeStep === index ? 'active' : ''}`}
                            onClick={() => goToStep(index)}
                        ></div>
                    ))}
                </div>
                
                <button
                    className="tg-nav-button tg-next-button"
                    onClick={handleNext}
                >
                    {activeStep === steps.length - 1 ? '–ó–∞–≤–µ—Ä—à–∏—Ç—å' : '–î–∞–ª–µ–µ'}
                </button>
            </div>
        </div>
    );
};

export default OnboardingTutorial;
