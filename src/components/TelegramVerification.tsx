import { useState, useEffect } from 'react'
import WebApp from '@twa-dev/sdk'
import { Button } from './Button'
import { Card } from './Card'
import { startTelegramAuth, isUserVerified, isTelegramWebApp } from '../utils/telegram-api'
import { getCurrentUser } from '../utils/user'

interface TelegramVerificationProps {
  onVerified?: () => void
  buttonText?: string
  withCard?: boolean
  className?: string
}

export const TelegramVerification = ({
  onVerified,
  buttonText = '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —á–µ—Ä–µ–∑ Telegram',
  withCard = true,
  className = ''
}: TelegramVerificationProps) => {
  const [isVerified, setIsVerified] = useState(false)
  const [userName, setUserName] = useState('')
  const [isLoading, setIsLoading] = useState(false)
  const [isInTelegram, setIsInTelegram] = useState(false)

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram WebApp
    setIsInTelegram(isTelegramWebApp())

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const verified = isUserVerified()
    setIsVerified(verified)

    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const user = getCurrentUser()
    if (user) {
      setUserName(user.name)
    }
  }, [])

  const handleVerification = () => {
    setIsLoading(true)

    try {
      startTelegramAuth()

      // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      setTimeout(() => {
        setIsLoading(false)

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        const verified = isUserVerified()
        setIsVerified(verified)

        // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        const user = getCurrentUser()
        if (user) {
          setUserName(user.name)
        }

        if (verified && onVerified) {
          onVerified()
        }
      }, 1000)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram:', error)
      setIsLoading(false)

      WebApp.showPopup({
        title: '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
        message: '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ Telegram. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
        buttons: [{ type: 'ok' }]
      })
    }
  }

  const renderContent = () => (
    <div className="flex flex-col gap-4">
      {isVerified ? (
        <div className="flex items-center text-green-600">
          <span className="mr-2">‚úÖ</span>
          <p>–ê–∫–∫–∞—É–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω: {userName}</p>
        </div>
      ) : (
        <div className="flex flex-col gap-2">
          <p className="text-sm text-gray-600">
            {isInTelegram
              ? '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç —á–µ—Ä–µ–∑ Telegram –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º.'
              : '–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞.'}
          </p>
          <Button
            onClick={handleVerification}
            isLoading={isLoading}
            className={`${isInTelegram ? 'bg-blue-500 hover:bg-blue-600' : 'bg-gray-400'}`}
            disabled={!isInTelegram}
          >
            <span className="mr-2">üîí</span> {buttonText}
          </Button>
        </div>
      )}
    </div>
  )

  if (withCard) {
    return (
      <Card className={`backdrop-blur-sm bg-opacity-90 ${className}`}>
        <div className="flex flex-col gap-2">
          <h3 className="font-bold text-lg">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞</h3>
          {renderContent()}
        </div>
      </Card>
    )
  }

  return <div className={className}>{renderContent()}</div>
}
