import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import './main.css';
import App from './App';
import WebApp from '@twa-dev/sdk';
import { errorTracker } from './utils/errorTracker';
import appState from './utils/globals';
import { whiteScreenDetector } from './utils/whiteScreenDetector';

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–∫ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
import { createWebAppMock } from './utils/telegramMock';

console.time('‚è±Ô∏è app-initialization');

// –û—á–∏—â–∞–µ–º —Ç–∞–π–º–∞—É—Ç –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ –∏–∑ HTML
if (window.telegramAppInitTimeout) {
  clearTimeout(window.telegramAppInitTimeout);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–±–æ—Ç–∞–µ–º –ª–∏ –º—ã –≤ Telegram WebApp
const isInTelegram = appState.inTelegram;

console.log(`üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è ${isInTelegram ? '–í TELEGRAM' : '–õ–û–ö–ê–õ–¨–ù–û'}`);
console.log(`üåé –û–∫—Ä—É–∂–µ–Ω–∏–µ: ${process.env.NODE_ENV}, –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${appState.platform}`);

// –°–æ–∑–¥–∞–µ–º –º–æ–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if (!isInTelegram) {
  console.log('üîß –°–æ–∑–¥–∞–µ–º –º–æ–∫ Telegram WebApp API –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
  createWebAppMock();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –≤—ã–∑—ã–≤–∞–µ–º WebApp.ready() –¥–ª—è Telegram
if (isInTelegram) {
  try {
    WebApp.ready();
    WebApp.expand();
    console.log('‚úì Telegram WebApp API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º—É
    const theme = WebApp.colorScheme || 'light';
    document.documentElement.setAttribute('data-theme', theme);
    console.log(`üé® –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ç–µ–º–∞: ${theme}`);
  } catch (e) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp:', e);
    errorTracker.logError(e instanceof Error ? e : new Error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ WebApp'));
  }
}

// –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
const rootElement = document.getElementById('root');

if (!rootElement) {
  console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –≠–ª–µ–º–µ–Ω—Ç #root –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  document.body.innerHTML = '<div style="padding:20px;text-align:center;"><h1>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h1><p>–ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</p></div>';
} else {
  try {
    // –†–µ–Ω–¥–µ—Ä–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–µ–∑ StrictMode –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥–≤–æ–π–Ω—ã—Ö —Ä–µ–Ω–¥–µ—Ä–æ–≤
    ReactDOM.createRoot(rootElement).render(<App />);
    console.log('‚úì –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω–æ');

    // –£–¥–∞–ª—è–µ–º –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
    if (typeof window.removeLoadingScreen === 'function') {
      window.removeLoadingScreen();
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ—Ç–µ–∫—Ç–æ—Ä –±–µ–ª—ã—Ö —ç–∫—Ä–∞–Ω–æ–≤ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
    setTimeout(() => {
      whiteScreenDetector.start();
    }, 2000);
  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
    errorTracker.logError(error instanceof Error ? error : new Error('–û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'));

    document.body.innerHTML = `<div style="padding:20px;text-align:center;">
      <h1>–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h1>
      <p>${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}</p>
      <button onclick="window.location.reload()">–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å</button>
    </div>`;
  }
}

console.timeEnd('‚è±Ô∏è app-initialization');
