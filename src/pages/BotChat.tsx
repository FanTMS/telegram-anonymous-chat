import { useState, useEffect } from 'react'
import { useNavigate } from 'react-router-dom'
import { Card } from '../components/Card'
import { Button } from '../components/Button'
import { BotChatInterface } from '../components/BotChatInterface'
import { getCurrentUser } from '../utils/user'
import { addCurrency } from '../utils/store'

// –ù–∞—á–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
const initialBotMessages = [
  {
    id: 'initial_1',
    type: 'bot' as const,
    text: '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ —á–∞—Ç–∞. –ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?',
    timestamp: Date.now() - 1000
  },
  {
    id: 'initial_2',
    type: 'bot' as const,
    text: '–í—ã –º–æ–∂–µ—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å –º–µ–Ω—è –æ —Ñ—É–Ω–∫—Ü–∏—è—Ö —á–∞—Ç–∞, –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å —Å –ø–æ–∏—Å–∫–æ–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∏–ª–∏ —É–∑–Ω–∞—Ç—å –æ —Å–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ.',
    timestamp: Date.now()
  }
]

export const BotChat = () => {
  const navigate = useNavigate()
  const [suggestedCommands, setSuggestedCommands] = useState([
    '–ü—Ä–∏–≤–µ—Ç',
    '–ö–∞–∫ –Ω–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞?',
    '–ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –º–æ–Ω–µ—Ç—ã?',
    '–ß—Ç–æ —Ç–∞–∫–æ–µ —Ä–µ–π—Ç–∏–Ω–≥?'
  ])
  const [user, setUser] = useState<any>(null)
  const [dailyBonusAvailable, setDailyBonusAvailable] = useState(true)

  useEffect(() => {
    const currentUser = getCurrentUser()
    if (currentUser) {
      setUser(currentUser)
    } else {
      navigate('/')
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–æ–Ω—É—Å–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç –∏–∑ API)
    const lastBonusTime = localStorage.getItem('last_bot_bonus')
    if (lastBonusTime) {
      const now = Date.now()
      const lastTime = parseInt(lastBonusTime)
      // –ï—Å–ª–∏ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±–æ–Ω—É—Å–∞ –ø—Ä–æ—à–ª–æ –º–µ–Ω–µ–µ 24 —á–∞—Å–æ–≤, —Ç–æ –±–æ–Ω—É—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
      if (now - lastTime < 24 * 60 * 60 * 1000) {
        setDailyBonusAvailable(false)
      }
    }
  }, [navigate])

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const handleUserMessage = (message: string) => {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ API –±–æ—Ç–∞
    // –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    setTimeout(() => {
      let botResponse = ''
      const lowerMsg = message.toLowerCase()

      if (lowerMsg.includes('–ø—Ä–∏–≤–µ—Ç')) {
        botResponse = `–ü—Ä–∏–≤–µ—Ç, ${user?.name || '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}! –ß–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å —Å–µ–≥–æ–¥–Ω—è?`
      }
      else if (lowerMsg.includes('–Ω–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞') || lowerMsg.includes('–ø–æ–∏—Å–∫')) {
        botResponse = '–ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞". –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–π —Ä–µ–∂–∏–º –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å.'
      }
      else if (lowerMsg.includes('–º–æ–Ω–µ—Ç') || lowerMsg.includes('–∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å')) {
        botResponse = '–ú–æ–Ω–µ—Ç—ã –º–æ–∂–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å, –æ–±—â–∞—è—Å—å –≤ —á–∞—Ç–µ, –ø–æ–ª—É—á–∞—è —Ö–æ—Ä–æ—à–∏–µ –æ—Ç–∑—ã–≤—ã –æ—Ç —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –∏ –∑–∞—Ö–æ–¥—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –ö—Å—Ç–∞—Ç–∏, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!'
      }
      else if (lowerMsg.includes('—Ä–µ–π—Ç–∏–Ω–≥')) {
        botResponse = '–†–µ–π—Ç–∏–Ω–≥ - —ç—Ç–æ –æ—Ü–µ–Ω–∫–∞ –≤–∞—à–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏. –ß–µ–º –≤—ã—à–µ —Ä–µ–π—Ç–∏–Ω–≥, —Ç–µ–º –±–æ–ª—å—à–µ –¥–æ–≤–µ—Ä–∏—è –∫ –≤–∞–º. –†–µ–π—Ç–∏–Ω–≥ –≤–ª–∏—è–µ—Ç –Ω–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –ø–æ–∏—Å–∫–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤.'
      }
      else if (lowerMsg.includes('–ø—Ä–æ—Ñ–∏–ª—å') || lowerMsg.includes('–∞–∫–∫–∞—É–Ω—Ç')) {
        if (user) {
          botResponse = `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ:\n–ò–º—è: ${user.name}\n–í–æ–∑—Ä–∞—Å—Ç: ${user.age}\n–ì–æ—Ä–æ–¥: ${user.city}\n–†–µ–π—Ç–∏–Ω–≥: ${user.rating}‚≠ê\n–ò–Ω—Ç–µ—Ä–µ—Å—ã: ${user.interests.join(', ')}`
        } else {
          botResponse = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.'
        }
      }
      else if (lowerMsg.includes('–±–æ–Ω—É—Å') || lowerMsg.includes('–Ω–∞–≥—Ä–∞–¥–∞')) {
        if (dailyBonusAvailable) {
          botResponse = '–Ø –¥–æ–±–∞–≤–∏–ª –≤–∞–º –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å 5 –º–æ–Ω–µ—Ç! –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –∑–∞–≤—Ç—Ä–∞ –∑–∞ –Ω–æ–≤–æ–π –Ω–∞–≥—Ä–∞–¥–æ–π.'
          // –ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ—Å—Ç—É–ø–µ–Ω
          if (user) {
            addCurrency(user.id, 5, '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –æ—Ç –±–æ—Ç–∞')
            // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞
            localStorage.setItem('last_bot_bonus', Date.now().toString())
            setDailyBonusAvailable(false)
          }
        } else {
          botResponse = '–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ —Å–µ–≥–æ–¥–Ω—è —Å–≤–æ–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å. –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞!'
        }
      }
      else {
        botResponse = '–Ø –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é, –æ —á–µ–º –≤—ã. –í—ã –º–æ–∂–µ—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å –º–µ–Ω—è –æ –ø–æ–∏—Å–∫–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤, –∑–∞—Ä–∞–±–æ—Ç–∫–µ –º–æ–Ω–µ—Ç –∏–ª–∏ —Å–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ.'
      }

      // –í—Å—Ç–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–∞—Ç–∞ —á–µ—Ä–µ–∑ DOM
      const botMessageElement = document.createElement('div')
      botMessageElement.textContent = botResponse
      botMessageElement.setAttribute('data-bot-message', 'true')

      // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
      if (lowerMsg.includes('–º–æ–Ω–µ—Ç') || lowerMsg.includes('–∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å')) {
        setSuggestedCommands(['–ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å', '–ö–∞–∫ –ø–æ–≤—ã—Å–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥?', '–ß—Ç–æ —Ç–∞–∫–æ–µ –ø—Ä–µ–º–∏—É–º?'])
      } else if (lowerMsg.includes('–ø—Ä–æ—Ñ–∏–ª—å')) {
        setSuggestedCommands(['–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å?', '–°–∫—Ä—ã—Ç—å –º–æ–π –ø—Ä–æ—Ñ–∏–ª—å', '–ù–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞'])
      }
    }, 1000)
  }

  return (
    <div className="flex flex-col gap-4">
      <h1 className="text-2xl font-bold mb-4">–ë–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫</h1>

      <Card className="mb-4">
        <div className="flex items-center mb-4">
          <div className="w-12 h-12 rounded-full bg-blue-500 text-white flex items-center justify-center text-xl mr-4">
            ü§ñ
          </div>
          <div>
            <h2 className="text-lg font-semibold">–ë–æ—Ç-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç</h2>
            <p className="text-sm text-gray-600">–í—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å!</p>
          </div>
          {dailyBonusAvailable && (
            <div className="ml-auto bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs font-medium">
              –ë–æ–Ω—É—Å –¥–æ—Å—Ç—É–ø–µ–Ω!
            </div>
          )}
        </div>

        <p className="text-sm mb-4">
          –Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–º–æ–≥–∞—Ç—å —Å –ø–æ–∏—Å–∫–æ–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –∏ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –æ —Ñ—É–Ω–∫—Ü–∏—è—Ö —á–∞—Ç–∞.
          –ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –∑–∞–¥–∞–≤–∞—Ç—å –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã!
        </p>

        <div className="bg-blue-50 p-3 rounded-md text-sm text-blue-800 mb-4">
          <strong>–ü–æ–¥—Å–∫–∞–∑–∫–∞:</strong> –°–ø—Ä–æ—Å–∏—Ç–µ –±–æ—Ç–∞ "–ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –º–æ–Ω–µ—Ç—ã?" –∏–ª–∏ "–†–∞—Å—Å–∫–∞–∂–∏ –æ –º–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ"
        </div>
      </Card>

      <BotChatInterface
        initialMessages={initialBotMessages}
        onSendMessage={handleUserMessage}
        suggestedCommands={suggestedCommands}
        showTypingIndicator={false}
      />

      <Button
        variant="outline"
        onClick={() => navigate('/')}
        fullWidth
      >
        <span className="mr-2">üè†</span> –ù–∞ –≥–ª–∞–≤–Ω—É—é
      </Button>
    </div>
  )
}
