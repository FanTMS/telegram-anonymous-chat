import { useState, useEffect, useCallback } from 'react'
import { useNavigate } from 'react-router-dom'
import WebApp from '@twa-dev/sdk'
import { motion, AnimatePresence } from 'framer-motion'
import {
  allStoreItems,
  StoreItem,
  StoreItemUnion,
  getUserPurchases,
  purchaseItem,
  getUserCurrency,
  addCurrency
} from '../utils/store'
import { getCurrentUser } from '../utils/user'
import { StoreItemCard } from '../components/store/StoreItemCard'
import { StoreItemDetail } from '../components/store/StoreItemDetail'

// –¢–∏–ø –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤
type FilterType = 'all' | 'avatar' | 'sticker_pack' | 'emoji_pack' | 'premium_feature'

// –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è –º–µ—Ç–æ–¥–æ–≤ WebApp API
const safeWebApp = {
  showPopup: (params: any) => {
    try {
      if (WebApp && typeof WebApp.showPopup === 'function') {
        WebApp.showPopup(params);
      } else {
        console.log('WebApp.showPopup –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è:', params);
        alert(params.message || '–°–æ–æ–±—â–µ–Ω–∏–µ WebApp');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ WebApp.showPopup:', error);
      alert(params.message || '–°–æ–æ–±—â–µ–Ω–∏–µ WebApp');
    }
  },
  showAlert: (message: string) => {
    try {
      if (WebApp && typeof WebApp.showAlert === 'function') {
        WebApp.showAlert(message);
      } else {
        console.log('WebApp.showAlert –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è:', message);
        alert(message);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ WebApp.showAlert:', error);
      alert(message);
    }
  },
  getColorScheme: () => {
    try {
      if (WebApp && WebApp.colorScheme) {
        return WebApp.colorScheme;
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ WebApp.colorScheme:', error);
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
  }
};

export const Store = () => {
  const navigate = useNavigate()
  const [userId, setUserId] = useState<string>('')
  const [searchTerm, setSearchTerm] = useState('')
  const [selectedFilter, setSelectedFilter] = useState<FilterType>('all')
  const [filteredItems, setFilteredItems] = useState<StoreItemUnion[]>([])
  const [selectedItem, setSelectedItem] = useState<StoreItem | null>(null)
  const [purchasedItems, setPurchasedItems] = useState<Set<string>>(new Set())
  const [userBalance, setUserBalance] = useState<number>(0)
  const [isLoading, setIsLoading] = useState(true)

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ –ø–æ–∫—É–ø–∫–∏
  useEffect(() => {
    const loadUserData = async () => {
      setIsLoading(true);
      try {
        const user = getCurrentUser()
        if (!user) {
          navigate('/')
          return
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        setUserId(user.id)

        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
        const currency = getUserCurrency(user.id)
        setUserBalance(currency.balance)

        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–∫—É–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const purchases = getUserPurchases(user.id)
        const purchasedItemsSet = new Set(purchases.map(p => p.itemId))
        setPurchasedItems(purchasedItemsSet)

        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã
        filterItems('all')
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
      } finally {
        setIsLoading(false);
      }
    }

    loadUserData()
  }, [navigate])

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
  const filterItems = useCallback((filter: FilterType, search: string = searchTerm) => {
    let items = [...allStoreItems]

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–∏–ø—É
    if (filter !== 'all') {
      items = items.filter(item => item.type === filter)
    }

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É
    if (search) {
      const term = search.toLowerCase()
      items = items.filter(item =>
        item.name.toLowerCase().includes(term) ||
        item.description.toLowerCase().includes(term)
      )
    }

    // –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –≤—Å–µ–≥–¥–∞ –≤ –Ω–∞—á–∞–ª–µ —Å–ø–∏—Å–∫–∞
    items.sort((a, b) => {
      // –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏
      if (a.isPopular && !b.isPopular) return -1
      if (!a.isPopular && b.isPopular) return 1

      // –ó–∞—Ç–µ–º –ø–æ –Ω–æ–≤–∏–∑–Ω–µ
      if (a.isNew && !b.isNew) return -1
      if (!a.isNew && b.isNew) return 1

      return 0
    })

    setFilteredItems(items)
    setSelectedFilter(filter)
  }, [searchTerm])

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
  const handleSearch = (value: string) => {
    setSearchTerm(value)
    filterItems(selectedFilter, value)
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–∞
  const handlePurchase = (itemId: string) => {
    // –ù–∞—Ö–æ–¥–∏–º —Ç–æ–≤–∞—Ä –ø–æ ID
    const item = allStoreItems.find(i => i.id === itemId)
    if (!item) {
      safeWebApp.showAlert('–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω')
      return
    }

    // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É
    const success = purchaseItem(userId, itemId)

    if (success) {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫
      setPurchasedItems(prev => {
        const newSet = new Set(prev)
        newSet.add(itemId)
        return newSet
      })

      // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
      const currency = getUserCurrency(userId)
      setUserBalance(currency.balance)

      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å –¥–µ—Ç–∞–ª—è–º–∏ —Ç–æ–≤–∞—Ä–∞
      if (selectedItem && selectedItem.id === itemId) {
        setSelectedItem(null)
      }

      safeWebApp.showPopup({
        title: '–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞',
        message: `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ "${item.name}"!`,
        buttons: [{ type: 'ok' }]
      });
    } else {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–º –±–∞–ª–∞–Ω—Å–µ
      safeWebApp.showAlert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å.')
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
  const handleBalanceUpdate = (newBalance: number) => {
    setUserBalance(newBalance)
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π —Ç–æ–≤–∞—Ä–∞
  const handleViewItem = (item: StoreItem) => {
    setSelectedItem(item)
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –¥–µ—Ç–∞–ª–µ–π —Ç–æ–≤–∞—Ä–∞
  const handleCloseItemDetails = () => {
    setSelectedItem(null)
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –≤–∞–ª—é—Ç—ã - —Ç–µ–ø–µ—Ä—å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –±—É–¥—É—â–µ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
  const handleAddTestCurrency = () => {
    safeWebApp.showPopup({
      title: '–°–∫–æ—Ä–æ',
      message: '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è',
      buttons: [{ type: 'ok' }]
    });
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤
  const avatarCount = allStoreItems.filter(item => item.type === 'avatar').length
  const stickerCount = allStoreItems.filter(item => item.type === 'sticker_pack').length
  const emojiCount = allStoreItems.filter(item => item.type === 'emoji_pack').length
  const premiumCount = allStoreItems.filter(item => item.type === 'premium_feature').length

  return (
    <div className="tg-container pb-16">
      <motion.div
        initial={{ opacity: 0, y: -10 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.3 }}
      >
        {/* –í–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å —Å –±–∞–ª–∞–Ω—Å–æ–º –∏ –ø–æ–∏—Å–∫–æ–º */}
        <div className="flex flex-col justify-between mb-4">
          <div className="flex justify-between items-center mb-4">
            <h1 className="tg-header mb-0">–ú–∞–≥–∞–∑–∏–Ω</h1>
            <div className="bg-gray-100 dark:bg-gray-800 rounded-xl px-4 py-2 flex items-center">
              <span className="text-yellow-500 mr-1.5">üí∞</span>
              <span className="font-medium">{userBalance}</span>
              <button
                onClick={handleAddTestCurrency}
                className="ml-2 text-xs bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 px-2 py-0.5 rounded-full transition-colors"
                aria-label="–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å"
              >
                +
              </button>
            </div>
          </div>

          {/* –ü–æ–∏—Å–∫ */}
          <div className="relative mb-4">
            <input
              type="text"
              value={searchTerm}
              onChange={(e) => handleSearch(e.target.value)}
              className="tg-input w-full pl-10 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 shadow-sm"
              placeholder="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤..."
            />
            <span className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400">
              üîç
            </span>
            {searchTerm && (
              <button
                onClick={() => handleSearch('')}
                className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400"
              >
                ‚úï
              </button>
            )}
          </div>
        </div>

        {/* –§–∏–ª—å—Ç—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
        <div className="flex overflow-x-auto pb-2 mb-4 no-scrollbar">
          <div className="flex space-x-2">
            <button
              onClick={() => filterItems('all')}
              className={`whitespace-nowrap px-3 py-2 rounded-xl border transition-colors ${selectedFilter === 'all'
                ? 'tg-button'
                : 'border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800'
                }`}
            >
              –í—Å–µ <span className="opacity-75">({allStoreItems.length})</span>
            </button>
            <button
              onClick={() => filterItems('avatar')}
              className={`whitespace-nowrap px-3 py-2 rounded-xl border transition-colors ${selectedFilter === 'avatar'
                ? 'tg-button'
                : 'border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800'
                }`}
            >
              –ê–≤–∞—Ç–∞—Ä—ã <span className="opacity-75">({avatarCount})</span>
            </button>
            <button
              onClick={() => filterItems('sticker_pack')}
              className={`whitespace-nowrap px-3 py-2 rounded-xl border transition-colors ${selectedFilter === 'sticker_pack'
                ? 'tg-button'
                : 'border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800'
                }`}
            >
              –°—Ç–∏–∫–µ—Ä—ã <span className="opacity-75">({stickerCount})</span>
            </button>
            <button
              onClick={() => filterItems('emoji_pack')}
              className={`whitespace-nowrap px-3 py-2 rounded-xl border transition-colors ${selectedFilter === 'emoji_pack'
                ? 'tg-button'
                : 'border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800'
                }`}
            >
              –≠–º–æ–¥–∑–∏ <span className="opacity-75">({emojiCount})</span>
            </button>
            <button
              onClick={() => filterItems('premium_feature')}
              className={`whitespace-nowrap px-3 py-2 rounded-xl border transition-colors ${selectedFilter === 'premium_feature'
                ? 'tg-button'
                : 'border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800'
                }`}
            >
              –ü—Ä–µ–º–∏—É–º <span className="opacity-75">({premiumCount})</span>
            </button>
          </div>
        </div>

        {/* –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ */}
        {isLoading ? (
          <div className="flex justify-center items-center h-60">
            <div className="spinner"></div>
          </div>
        ) : (
          <>
            {/* –°–µ—Ç–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ */}
            {filteredItems.length > 0 ? (
              <div className="grid grid-cols-2 sm:grid-cols-3 gap-3">
                <AnimatePresence>
                  {filteredItems.map((item) => (
                    <motion.div
                      key={item.id}
                      initial={{ opacity: 0, scale: 0.9 }}
                      animate={{ opacity: 1, scale: 1 }}
                      exit={{ opacity: 0, scale: 0.9 }}
                      transition={{ duration: 0.2 }}
                      layout
                    >
                      <StoreItemCard
                        item={item}
                        userId={userId}
                        onPurchase={handlePurchase}
                        onView={handleViewItem}
                        isPurchased={purchasedItems.has(item.id)}
                      />
                    </motion.div>
                  ))}
                </AnimatePresence>
              </div>
            ) : (
              <div className="flex flex-col items-center justify-center py-10 bg-gray-50 dark:bg-gray-800 rounded-lg text-center">
                <div className="text-5xl mb-4">üîç</div>
                <p className="text-lg mb-2">–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
                <p className="text-sm text-gray-500 dark:text-gray-400 mb-4">
                  –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                </p>
                <button
                  onClick={() => {
                    setSearchTerm('');
                    filterItems('all', '');
                  }}
                  className="tg-button-sm"
                >
                  –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                </button>
              </div>
            )}
          </>
        )}

        {/* –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞ */}
        <AnimatePresence>
          {selectedItem && (
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              className="fixed inset-0 z-50 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center p-4"
              onClick={handleCloseItemDetails}
            >
              <motion.div
                initial={{ scale: 0.9, y: 20 }}
                animate={{ scale: 1, y: 0 }}
                exit={{ scale: 0.9, y: 20 }}
                transition={{ type: 'spring', damping: 25 }}
                className="w-full max-w-lg"
                onClick={e => e.stopPropagation()}
              >
                <StoreItemDetail
                  item={selectedItem}
                  userId={userId}
                  onPurchase={handlePurchase}
                  onClose={handleCloseItemDetails}
                  isPurchased={purchasedItems.has(selectedItem.id)}
                />
              </motion.div>
            </motion.div>
          )}
        </AnimatePresence>
      </motion.div>
    </div>
  )
}
