import { useState } from 'react'
import { useNavigate } from 'react-router-dom'
import { Button } from '../components/Button'
import { Card } from '../components/Card'
import { Input } from '../components/Input'
import { User, saveUser, getCurrentUser } from '../utils/user'

export const TelegramVerifyMock = () => {
  const navigate = useNavigate()
  const [name, setName] = useState('')
  const [username, setUsername] = useState('')
  const [telegramId, setTelegramId] = useState('5394381166') // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º ID –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
  const [isLoading, setIsLoading] = useState(false)
  const [error, setError] = useState<string | null>(null)

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    setError(null)
    setIsLoading(true)

    try {
      if (!name) {
        setError('–í–≤–µ–¥–∏—Ç–µ –∏–º—è')
        setIsLoading(false)
        return
      }

      if (!telegramId) {
        setError('–í–≤–µ–¥–∏—Ç–µ Telegram ID')
        setIsLoading(false)
        return
      }

      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
      let user = getCurrentUser()

      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ
      if (!user) {
        const userId = `user_${Date.now()}`
        user = {
          id: userId,
          name,
          age: 25,
          isAnonymous: false,
          interests: [],
          rating: 0,
          createdAt: Date.now(),
          lastActive: Date.now()
        }
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      user.verified = true
      user.telegramData = {
        telegramId,
        username: username || undefined,
        firstName: name.split(' ')[0],
        lastName: name.split(' ').slice(1).join(' ') || undefined,
        photoUrl: undefined,
        authDate: Math.floor(Date.now() / 1000)
      }

      if (!user.name) {
        user.name = name
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      saveUser(user)

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      setIsLoading(false)
      alert(`–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ ${name}!`)

      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      navigate('/')
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–∏—Ç–∞—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram:', error)
      setIsLoading(false)
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
    }
  }

  return (
    <div className="flex flex-col gap-4">
      <h1 className="text-2xl font-bold mb-4">–ò–º–∏—Ç–∞—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram</h1>

      {error && (
        <div className="p-3 rounded-md bg-red-100 text-red-800">
          {error}
        </div>
      )}

      <Card>
        <form onSubmit={handleSubmit} className="flex flex-col gap-4">
          <Input
            label="–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è"
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é"
            value={name}
            onChange={(e) => setName(e.target.value)}
            fullWidth
            required
          />

          <Input
            label="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
            placeholder="@username"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
            fullWidth
          />

          <Input
            label="Telegram ID"
            placeholder="–í–≤–µ–¥–∏—Ç–µ Telegram ID"
            value={telegramId}
            onChange={(e) => setTelegramId(e.target.value)}
            fullWidth
            required
          />

          <Button
            type="submit"
            isLoading={isLoading}
            fullWidth
            className="bg-blue-500 hover:bg-blue-600"
          >
            <span className="mr-2">üîí</span> –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
          </Button>
        </form>
      </Card>

      <Button
        variant="outline"
        onClick={() => navigate('/')}
        fullWidth
      >
        <span className="mr-2">üè†</span> –ù–∞ –≥–ª–∞–≤–Ω—É—é
      </Button>
    </div>
  )
}
