import { useState, useEffect } from 'react'
import { useNavigate , Link } from 'react-router-dom'
import WebApp from '@twa-dev/sdk'
import { Button } from '../components/Button'
import { Card } from '../components/Card'
import { AnimatedButton } from '../components/AnimatedButton'
import {
  User,
  getCurrentUser,
  createDemoUser
} from '../utils/user'
import { generateRandomNickname } from '../utils/interests'
import { telegramApi } from '../utils/database'
import { addCurrency } from '../utils/store'

export const TestHome = () => {
  const navigate = useNavigate()
  const [currentUser, setCurrentUser] = useState<User | null>(null)
  const [showAdminButton, setShowAdminButton] = useState(false)

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–º—É Telegram
  const isDarkTheme = WebApp.colorScheme === 'dark'

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ
    const user = getCurrentUser()
    setCurrentUser(user)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if (user?.isAdmin) {
      setShowAdminButton(true)
    }
  }, [])

  // –ù–∞—á–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç
  const handleStartAnonymous = () => {
    let user = getCurrentUser()

    if (!user) {
      // –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      user = createDemoUser()
      setCurrentUser(user)
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–æ–Ω–∏–º–Ω—ã–π —Ä–µ–∂–∏–º
    if (user) {
      user.isAnonymous = true
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∏–º—è –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
      user.name = generateRandomNickname()
    }

    navigate('/') // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  }

  // –ù–∞—á–∞—Ç—å –æ–±—ã—á–Ω—ã–π —á–∞—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º –ø—Ä–æ—Ñ–∏–ª–µ–º
  const handleStartWithProfile = () => {
    let user = getCurrentUser()

    if (!user) {
      // –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      user = createDemoUser()
      setCurrentUser(user)
    }

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
    if (user) {
      user.isAnonymous = false
    }

    navigate('/') // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram
  const handleTelegramAuth = async () => {
    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Telegram
      const success = await telegramApi.initialize()
      if (success) {
        const telegramId = telegramApi.getUserId()
        if (telegramId) {
          setCurrentUser(getCurrentUser())
          WebApp.showAlert('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram —É—Å–ø–µ—à–Ω–∞!')
        } else {
          WebApp.showAlert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Telegram ID')
        }
      } else {
        // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        navigate('/verify-telegram-mock')
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram:', error)
      WebApp.showAlert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram')
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞
  const handleDailyBonus = async () => {
    try {
      if (!currentUser) {
        WebApp.showAlert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å')
        return
      }

      const bonusAmount = 10
      const result = addCurrency(currentUser.id, bonusAmount, '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å')

      if (result) {
        WebApp.showAlert(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å: ${bonusAmount} –º–æ–Ω–µ—Ç!`)
      } else {
        WebApp.showAlert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ –±–æ–Ω—É—Å–∞')
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–æ–Ω—É—Å–∞:', error)
      WebApp.showAlert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–æ–Ω—É—Å–∞')
    }
  }

  return (
    <div className="flex flex-col gap-4">
      <Card className="mb-4">
        <div className="flex flex-col items-center gap-4 p-4">
          <h1 className="text-xl font-bold mb-2">–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ —á–∞—Ç–∞</h1>
          <p className="text-center text-sm mb-4">
            –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è.
            –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:
          </p>

          <AnimatedButton
            onClick={handleStartAnonymous}
            fullWidth
            className="bg-gradient-to-r from-purple-500 to-indigo-600 hover:from-purple-600 hover:to-indigo-700 text-white"
            animation="pulse"
          >
            <span className="mr-2">üé≠</span> –ê–Ω–æ–Ω–∏–º–Ω—ã–π —Ä–µ–∂–∏–º
          </AnimatedButton>

          <AnimatedButton
            onClick={handleStartWithProfile}
            fullWidth
            className="bg-gradient-to-r from-blue-500 to-blue-700 hover:from-blue-600 hover:to-blue-800 text-white"
            animation="pulse"
          >
            <span className="mr-2">üë§</span> –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º
          </AnimatedButton>

          <Button
            onClick={handleTelegramAuth}
            fullWidth
            className="bg-blue-500 hover:bg-blue-600"
          >
            <span className="mr-2">‚úÖ</span> –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ Telegram
          </Button>

          {showAdminButton && (
            <Button
              onClick={() => navigate('/direct/admin')}
              fullWidth
              className="bg-red-500 hover:bg-red-600"
            >
              <span className="mr-2">‚öôÔ∏è</span> –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            </Button>
          )}

          <Button
            onClick={handleDailyBonus}
            fullWidth
            className="bg-yellow-500 hover:bg-yellow-600"
          >
            <span className="mr-2">üéÅ</span> –ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å
          </Button>
        </div>
      </Card>

      <div className="flex flex-wrap gap-2 justify-center">
        <Link to="/help">
          <Button>
            <span className="mr-2">‚ùì</span> –ü–æ–º–æ—â—å
          </Button>
        </Link>

        <Link to="/beginner-guide">
          <Button>
            <span className="mr-2">üìö</span> –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ
          </Button>
        </Link>

        <Link to="/direct/profile">
          <Button>
            <span className="mr-2">üë§</span> –ü—Ä–æ—Ñ–∏–ª—å
          </Button>
        </Link>

        <Link to="/direct/store">
          <Button>
            <span className="mr-2">üõí</span> –ú–∞–≥–∞–∑–∏–Ω
          </Button>
        </Link>
      </div>
    </div>
  )
}
