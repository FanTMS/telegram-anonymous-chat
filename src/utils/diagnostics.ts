/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
export function checkEnvironment(): { [key: string]: any } {
    const env = {
        isProduction: process.env.NODE_ENV === 'production',
        isDevelopment: process.env.NODE_ENV === 'development',
        windowSize: {
            width: window.innerWidth,
            height: window.innerHeight
        },
        userAgent: navigator.userAgent,
        isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
        isInFrame: window !== window.parent,
        isTelegramWebViewAgent: /TelegramWebApp/i.test(navigator.userAgent),
        hasLocalStorage: (() => {
            try {
                localStorage.setItem('test', 'test');
                localStorage.removeItem('test');
                return true;
            } catch (e) {
                return false;
            }
        })(),
        telegramWebApp: {
            available: typeof window.Telegram !== 'undefined' && typeof window.Telegram.WebApp !== 'undefined',
            hasInitData: typeof window.Telegram?.WebApp?.initData !== 'undefined' && window.Telegram.WebApp.initData.length > 0,
            colorScheme: window.Telegram?.WebApp?.colorScheme,
            isExpanded: window.Telegram?.WebApp?.isExpanded
        },
        documentReady: document.readyState,
        timestamp: new Date().toISOString()
    };

    return env;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
export function logDiagnostics() {
    const env = checkEnvironment();
    console.group('üìä –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
    console.log('–û–∫—Ä—É–∂–µ–Ω–∏–µ:', env);
    console.log('DOM –≥–æ—Ç–æ–≤:', document.readyState);
    console.log('Root —ç–ª–µ–º–µ–Ω—Ç:', document.getElementById('root'));

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∏–ª–∏
    try {
        const rootStyles = window.getComputedStyle(document.documentElement);
        const bodyStyles = window.getComputedStyle(document.body);
        console.log('Root —Å—Ç–∏–ª–∏:', {
            backgroundColor: rootStyles.backgroundColor,
            color: rootStyles.color,
            width: rootStyles.width,
            height: rootStyles.height
        });
        console.log('Body —Å—Ç–∏–ª–∏:', {
            backgroundColor: bodyStyles.backgroundColor,
            color: bodyStyles.color,
            width: bodyStyles.width,
            height: bodyStyles.height,
            margin: bodyStyles.margin,
            padding: bodyStyles.padding
        });
    } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∏–ª–µ–π:', e);
    }

    console.groupEnd();

    return env;
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
if (process.env.NODE_ENV === 'development') {
    window.addEventListener('DOMContentLoaded', () => {
        logDiagnostics();
    });

    // –¢–∞–∫–∂–µ –∑–∞–ø—É—Å—Ç–∏–º —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    window.addEventListener('load', () => {
        setTimeout(logDiagnostics, 1000);
    });
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
export default { checkEnvironment, logDiagnostics };
