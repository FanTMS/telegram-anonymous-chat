import WebApp from '@twa-dev/sdk'
import { getCurrentUser, saveUser } from './user'
import { storageAPI } from './storage-wrapper'
import faunadb from 'faunadb'

// FaunaDB configuration
const q = faunadb.query
let faunaClient: faunadb.Client | null = null

// Initialize FaunaDB client if FAUNA_SECRET is available
try {
  const faunaSecret = process.env.FAUNA_SECRET || import.meta.env?.VITE_FAUNA_SECRET
  if (faunaSecret) {
    faunaClient = new faunadb.Client({
      secret: faunaSecret,
      domain: 'db.fauna.com',
      scheme: 'https',
    })
    console.log('FaunaDB client initialized')
  } else {
    console.warn('No FaunaDB secret found, falling back to local storage')
  }
} catch (error) {
  console.error('Error initializing FaunaDB client:', error)
}

// –¢–∏–ø—ã –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
export interface StoreItem {
  id: string;
  type: 'avatar' | 'sticker_pack' | 'emoji_pack' | 'premium_feature';
  name: string;
  description: string;
  price: number;
  image?: string;
  discount?: number; // —Å–∫–∏–¥–∫–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
  isPopular?: boolean;
  isNew?: boolean;
}

export interface AvatarItem extends StoreItem {
  type: 'avatar';
  avatarUrl: string;
  previewUrl: string;
  bgColor?: string;
}

// Interface for a sticker in a sticker pack
export interface Sticker {
  id: string;
  url: string;
}

// Interface for sticker pack items
export interface StickerPackItem extends StoreItem {
  type: 'sticker_pack';
  stickers: Sticker[];
}

// Interface for emoji pack items
export interface EmojiPackItem extends StoreItem {
  type: 'emoji_pack';
  emojis: string[];
}

// Interface for premium features
export interface PremiumFeatureItem extends StoreItem {
  type: 'premium_feature';
  featureId: string;
  duration: number; // Duration in days
  benefits: string[];
}

// Union type for all store items
export type StoreItemUnion = AvatarItem | StickerPackItem | EmojiPackItem | PremiumFeatureItem;

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–∫—É–ø–∫–∏
export interface Purchase {
  id: string;
  userId: string;
  itemId: string;
  purchaseDate: number;
  expiryDate?: number; // –¥–ª—è –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏–π
  isActive: boolean;
}

// –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è
export interface Transaction {
  id: string;
  amount: number;
  description: string;
  date: number; // Unix timestamp
}

// –í–∞–ª—é—Ç–∞
export interface Currency {
  balance: number;
  transactions: Transaction[];
}

// –ê–≤–∞—Ç–∞—Ä—ã –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
const avatars: AvatarItem[] = [
  {
    id: 'avatar_1',
    type: 'avatar',
    name: '–ö–æ—Å–º–∏—á–µ—Å–∫–∏–π —Å—Ç—Ä–∞–Ω–Ω–∏–∫',
    description: '–í–µ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫ —Å –≥–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–º —Ñ–æ–Ω–æ–º',
    price: 100,
    avatarUrl: 'https://i.imgur.com/QgKvgZD.png',
    previewUrl: 'https://i.imgur.com/QgKvgZD.png',
    bgColor: 'linear-gradient(135deg, #4b6cb7 0%, #182848 100%)',
    isPopular: true
  },
  {
    id: 'avatar_2',
    type: 'avatar',
    name: '–ö–∏–±–µ—Ä–ø–∞–Ω–∫',
    description: '–§—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–≤–∞—Ç–∞—Ä –≤ —Å—Ç–∏–ª–µ –∫–∏–±–µ—Ä–ø–∞–Ω–∫',
    price: 150,
    avatarUrl: 'https://i.imgur.com/8OiExGM.png',
    previewUrl: 'https://i.imgur.com/8OiExGM.png',
    bgColor: 'linear-gradient(135deg, #ff0099 0%, #493240 100%)',
    isNew: true
  },
  {
    id: 'avatar_3',
    type: 'avatar',
    name: '–¢–µ–º–Ω—ã–π —Ä—ã—Ü–∞—Ä—å',
    description: '–¢–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∞–≤–∞—Ç–∞—Ä —Å –º–∏—Å—Ç–∏—á–µ—Å–∫–æ–π –∞—É—Ä–æ–π',
    price: 120,
    avatarUrl: 'https://i.imgur.com/lqEen0A.png',
    previewUrl: 'https://i.imgur.com/lqEen0A.png',
    bgColor: 'linear-gradient(135deg, #434343 0%, #000000 100%)'
  },
  {
    id: 'avatar_4',
    type: 'avatar',
    name: '–¢—Ä–æ–ø–∏—á–µ—Å–∫–∏–π —Ä–∞–π',
    description: '–Ø—Ä–∫–∏–π –ª–µ—Ç–Ω–∏–π –∞–≤–∞—Ç–∞—Ä –¥–ª—è —Ç–µ–ø–ª–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è',
    price: 100,
    avatarUrl: 'https://i.imgur.com/a9V15KL.png',
    previewUrl: 'https://i.imgur.com/a9V15KL.png',
    bgColor: 'linear-gradient(135deg, #11998e 0%, #38ef7d 100%)'
  },
  {
    id: 'avatar_5',
    type: 'avatar',
    name: '–ù–µ–æ–Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥',
    description: '–ê–≤–∞—Ç–∞—Ä –≤ —Å—Ç–∏–ª–µ –Ω–µ–æ–Ω–æ–≤—ã—Ö –≤—ã–≤–µ—Å–æ–∫ –±–æ–ª—å—à–æ–≥–æ –≥–æ—Ä–æ–¥–∞',
    price: 130,
    avatarUrl: 'https://i.imgur.com/JkQXi8z.png',
    previewUrl: 'https://i.imgur.com/JkQXi8z.png',
    bgColor: 'linear-gradient(135deg, #00c6ff 0%, #0072ff 100%)',
    discount: 15
  }
];

// –ù–∞–±–æ—Ä—ã —Å—Ç–∏–∫–µ—Ä–æ–≤
const stickerPacks: StickerPackItem[] = [
  {
    id: 'sticker_pack_1',
    type: 'sticker_pack',
    name: '–ú–∏–ª—ã–µ –∂–∏–≤–æ—Ç–Ω—ã–µ',
    description: '–ö–æ–ª–ª–µ–∫—Ü–∏—è –æ—á–∞—Ä–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Å—Ç–∏–∫–µ—Ä–æ–≤ —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏',
    price: 80,
    image: 'https://i.imgur.com/RbCDEeF.png',
    stickers: [
      { id: 's1_1', url: 'https://i.imgur.com/QDJ92A2.png' },
      { id: 's1_2', url: 'https://i.imgur.com/0sCZyvN.png' },
      { id: 's1_3', url: 'https://i.imgur.com/0yOYLxJ.png' },
      { id: 's1_4', url: 'https://i.imgur.com/HHF5MqN.png' },
      { id: 's1_5', url: 'https://i.imgur.com/VLKk8wI.png' }
    ],
    isPopular: true
  },
  {
    id: 'sticker_pack_2',
    type: 'sticker_pack',
    name: '–≠–º–æ—Ü–∏–∏',
    description: '–í—ã—Ä–∞–∂–∞–π—Ç–µ —Å–≤–æ–∏ —á—É–≤—Å—Ç–≤–∞ —Å —ç—Ç–∏–º–∏ —è—Ä–∫–∏–º–∏ —Å—Ç–∏–∫–µ—Ä–∞–º–∏',
    price: 75,
    image: 'https://i.imgur.com/2uF7qAB.png',
    stickers: [
      { id: 's2_1', url: 'https://i.imgur.com/AkF1wlE.png' },
      { id: 's2_2', url: 'https://i.imgur.com/SWU5GQp.png' },
      { id: 's2_3', url: 'https://i.imgur.com/M2Iomv2.png' },
      { id: 's2_4', url: 'https://i.imgur.com/lWpMSoz.png' },
      { id: 's2_5', url: 'https://i.imgur.com/jlqRZYK.png' }
    ]
  },
  {
    id: 'sticker_pack_3',
    type: 'sticker_pack',
    name: '–ö–æ—Ñ–µ–π–Ω—ã–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è',
    description: '–°—Ç–∏–∫–µ—Ä—ã –¥–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π –∫–æ—Ñ–µ –∏ –ø—Ä–∏—è—Ç–Ω—ã—Ö –±–µ—Å–µ–¥',
    price: 90,
    image: 'https://i.imgur.com/KMn9VZJ.png',
    stickers: [
      { id: 's3_1', url: 'https://i.imgur.com/wVJEpxG.png' },
      { id: 's3_2', url: 'https://i.imgur.com/uxQQvKb.png' },
      { id: 's3_3', url: 'https://i.imgur.com/SfJQMSk.png' },
      { id: 's3_4', url: 'https://i.imgur.com/7rVGUBn.png' },
      { id: 's3_5', url: 'https://i.imgur.com/LuJOy0r.png' }
    ],
    isNew: true
  }
];

// –ù–∞–±–æ—Ä—ã —ç–º–æ–¥–∑–∏
const emojiPacks: EmojiPackItem[] = [
  {
    id: 'emoji_pack_1',
    type: 'emoji_pack',
    name: '–ë–∞–∑–æ–≤—ã–µ —ç–º–æ—Ü–∏–∏',
    description: '–ù–∞–±–æ—Ä —ç–º–æ–¥–∑–∏ –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–º–æ—Ü–∏–π',
    price: 60,
    image: 'https://i.imgur.com/A7mJjQd.png',
    emojis: ['üòÄ', 'üòÉ', 'üòÑ', 'üòÅ', 'üòÜ', 'üòÖ', 'üòÇ', 'ü§£', 'üòä', 'üòá', 'üôÇ', 'üôÉ', 'üòâ', 'üòå', 'üòç', 'ü•∞', 'üòò'],
    isPopular: true
  },
  {
    id: 'emoji_pack_2',
    type: 'emoji_pack',
    name: '–ñ–µ—Å—Ç—ã –∏ —Ä—É–∫–∏',
    description: '–ù–∞–±–æ—Ä —ç–º–æ–¥–∑–∏-–∂–µ—Å—Ç–æ–≤ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è',
    price: 50,
    image: 'https://i.imgur.com/2rPHLgp.png',
    emojis: ['üëç', 'üëé', 'üëå', '‚úåÔ∏è', 'ü§û', 'ü§ü', 'ü§ò', 'ü§ô', 'üëà', 'üëâ', 'üëÜ', 'üëá', '‚úã', 'ü§ö', 'üñêÔ∏è', 'üññ', 'üëã', 'ü§è', '‚úçÔ∏è']
  },
  {
    id: 'emoji_pack_3',
    type: 'emoji_pack',
    name: '–°–µ—Ä–¥–µ—á–∫–∏ –∏ –ª—é–±–æ–≤—å',
    description: '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –Ω–∞–±–æ—Ä —ç–º–æ–¥–∑–∏ –¥–ª—è –æ—Å–æ–±—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤',
    price: 70,
    image: 'https://i.imgur.com/qkRTKDq.png',
    emojis: ['‚ù§Ô∏è', 'üß°', 'üíõ', 'üíö', 'üíô', 'üíú', 'üñ§', 'ü§ç', 'ü§é', 'üíî', '‚ù£Ô∏è', 'üíï', 'üíû', 'üíì', 'üíó', 'üíñ', 'üíò', 'üíù', 'üíü'],
    isNew: true
  },
  {
    id: 'emoji_pack_4',
    type: 'emoji_pack',
    name: '–í–µ—á–µ—Ä–∏–Ω–∫–∞ –∏ –ø—Ä–∞–∑–¥–Ω–∏–∫',
    description: '–í–µ—Å–µ–ª—ã–µ —ç–º–æ–¥–∑–∏ –¥–ª—è –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è',
    price: 65,
    image: 'https://i.imgur.com/h47wSrV.png',
    emojis: ['üéâ', 'üéä', 'üéà', 'üéÇ', 'üéÅ', 'üéÜ', 'üéá', 'üß®', '‚ú®', 'üéê', 'üéè', 'üéé', 'üéç', 'üéã', 'üéÑ', 'üéÉ', 'üéóÔ∏è', 'üéüÔ∏è', 'üé´'],
    discount: 15
  }
];

// –ü—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
const premiumFeatures: PremiumFeatureItem[] = [
  {
    id: 'premium_priority_search',
    type: 'premium_feature',
    featureId: 'priority_search',
    name: '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π –ø–æ–∏—Å–∫',
    description: '–í–∞—à–∏ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –±—É–¥—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å',
    price: 200,
    duration: 30, // –º–µ—Å—è—Ü
    image: 'https://i.imgur.com/ZyMf7R3.png',
    benefits: [
      '–ë—ã—Å—Ç—Ä–µ–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤',
      '–ú–µ–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏',
      '–ü–æ–≤—ã—à–µ–Ω–Ω—ã–π —à–∞–Ω—Å –Ω–∞–π—Ç–∏ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞'
    ],
    isPopular: true
  },
  {
    id: 'premium_extended_profile',
    type: 'premium_feature',
    featureId: 'extended_profile',
    name: '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å',
    description: '–î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ –∏ —É–≤–∏–¥–∏—Ç–µ –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π –æ –¥—Ä—É–≥–∏—Ö',
    price: 150,
    duration: 30, // –º–µ—Å—è—Ü
    image: 'https://i.imgur.com/vPUcBWE.png',
    benefits: [
      '–ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞—Ö',
      '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è',
      '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –±–∏–æ–≥—Ä–∞—Ñ–∏–∏'
    ]
  },
  {
    id: 'premium_advanced_filters',
    type: 'premium_feature',
    featureId: 'advanced_filters',
    name: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã',
    description: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–¥–µ–∞–ª—å–Ω—ã—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤',
    price: 180,
    duration: 30, // –º–µ—Å—è—Ü
    image: 'https://i.imgur.com/FVjEqF3.png',
    benefits: [
      '–ü–æ–∏—Å–∫ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∏–Ω—Ç–µ—Ä–µ—Å–∞–º',
      '–§–∏–ª—å—Ç—Ä –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É –∏ –≥–æ—Ä–æ–¥—É',
      '–ü–æ–∏—Å–∫ –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
    ]
  },
  {
    id: 'premium_ad_free',
    type: 'premium_feature',
    featureId: 'ad_free',
    name: '–†–µ–∂–∏–º –±–µ–∑ —Ä–µ–∫–ª–∞–º—ã',
    description: '–û—Ç–∫–ª—é—á–∏—Ç–µ –≤—Å–µ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –±–∞–Ω–Ω–µ—Ä—ã –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —á–∏—Å—Ç—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º',
    price: 120,
    duration: 30, // –º–µ—Å—è—Ü
    image: 'https://i.imgur.com/Gh7SQg.png',
    benefits: [
      '–ù–∏–∫–∞–∫–æ–π —Ä–µ–∫–ª–∞–º—ã –≤ —á–∞—Ç–µ –∏ –ø—Ä–æ—Ñ–∏–ª–µ',
      '–ß–∏—Å—Ç—ã–π –∏ –ø—Ä–∏—è—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å',
      '–ë–æ–ª—å—à–µ –º–µ—Å—Ç–∞ –¥–ª—è –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏'
    ],
    discount: 25,
    isNew: true
  },
  {
    id: 'premium_custom_themes',
    type: 'premium_feature',
    featureId: 'custom_themes',
    name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ç–µ–º—ã',
    description: '–í—ã–±–∏—Ä–∞–π—Ç–µ –∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —Ç–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é',
    price: 160,
    duration: 30, // –º–µ—Å—è—Ü
    image: 'https://i.imgur.com/7JmFBsH.png',
    benefits: [
      '–î–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º —Ç–µ–º–∞–º',
      '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞',
      '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è —Å–≤–æ–∏—Ö —Ç–µ–º'
    ]
  }
];

// –í—Å–µ —Ç–æ–≤–∞—Ä—ã –º–∞–≥–∞–∑–∏–Ω–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã –≤ –æ–¥–∏–Ω –º–∞—Å—Å–∏–≤
export let allStoreItems: StoreItemUnion[] = [
  ...avatars,
  ...stickerPacks,
  ...emojiPacks,
  ...premiumFeatures
];

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –º–∞–≥–∞–∑–∏–Ω
export const addStoreItem = (item: StoreItemUnion): void => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä —Å —Ç–∞–∫–∏–º ID
    const existingItemIndex = allStoreItems.findIndex(i => i.id === item.id);
    if (existingItemIndex !== -1) {
      throw new Error(`–¢–æ–≤–∞—Ä —Å ID ${item.id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –º–∞—Å—Å–∏–≤
    allStoreItems.push(item);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤ localStorage
    saveStoreItems();

    return;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:', error);
    throw error;
  }
};

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞
export const updateStoreItem = (item: StoreItemUnion): void => {
  try {
    // –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –æ–±–Ω–æ–≤–ª—è–µ–º–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    const itemIndex = allStoreItems.findIndex(i => i.id === item.id);
    if (itemIndex === -1) {
      throw new Error(`–¢–æ–≤–∞—Ä —Å ID ${item.id} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä
    allStoreItems[itemIndex] = item;

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤ localStorage
    saveStoreItems();

    return;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:', error);
    throw error;
  }
};

// –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞
export const removeStoreItem = (itemId: string): void => {
  try {
    // –§–∏–ª—å—Ç—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤, –∏—Å–∫–ª—é—á–∞—è —Ç–æ–≤–∞—Ä —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID
    const newItems = allStoreItems.filter(item => item.id !== itemId);

    // –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –∑–Ω–∞—á–∏—Ç —Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω
    if (newItems.length === allStoreItems.length) {
      throw new Error(`–¢–æ–≤–∞—Ä —Å ID ${itemId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
    allStoreItems = newItems;

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤ localStorage
    saveStoreItems();

    return;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:', error);
    throw error;
  }
};

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ localStorage –∏ FaunaDB
export const saveStoreItems = async (): Promise<void> => {
  try {
    // –í—Å–µ–≥–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞
    localStorage.setItem('store_items', JSON.stringify(allStoreItems));

    // –ï—Å–ª–∏ FaunaDB –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏ —Ç–∞–º
    if (faunaClient) {
      try {
        await faunaClient.query(
          q.Let(
            {
              itemsRef: q.Match(q.Index('store_items_by_type'), 'store_items')
            },
            q.If(
              q.Exists(q.Var('itemsRef')),
              q.Update(q.Select('ref', q.Get(q.Var('itemsRef'))), {
                data: { items: allStoreItems }
              }),
              q.Create(q.Collection('store_data'), {
                data: {
                  type: 'store_items',
                  items: allStoreItems
                }
              })
            )
          )
        );
        console.log('–¢–æ–≤–∞—Ä—ã –º–∞–≥–∞–∑–∏–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ FaunaDB');
      } catch (faunaError) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –≤ FaunaDB:', faunaError);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ —É –Ω–∞—Å –µ—Å—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –≤ localStorage
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤:', error);
  }
};

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ FaunaDB —Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º –∏–∑ localStorage
export const loadStoreItems = async (): Promise<void> => {
  try {
    // –ï—Å–ª–∏ FaunaDB –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—Ç—É–¥–∞
    if (faunaClient) {
      try {
        const result = await faunaClient.query(
          q.Let(
            {
              itemsRef: q.Match(q.Index('store_items_by_type'), 'store_items')
            },
            q.If(
              q.Exists(q.Var('itemsRef')),
              q.Select(['data', 'items'], q.Get(q.Var('itemsRef'))),
              []
            )
          )
        );

        if (result && Array.isArray(result) && result.length > 0) {
          allStoreItems = result;
          console.log('–¢–æ–≤–∞—Ä—ã –º–∞–≥–∞–∑–∏–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ FaunaDB');
          // –û–±–Ω–æ–≤–ª—è–µ–º localStorage –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
          localStorage.setItem('store_items', JSON.stringify(allStoreItems));
          return;
        }
      } catch (faunaError) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ FaunaDB:', faunaError);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ localStorage
      }
    }

    // –†–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç: –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ localStorage
    const savedItems = localStorage.getItem('store_items');
    if (savedItems) {
      allStoreItems = JSON.parse(savedItems);
      console.log('–¢–æ–≤–∞—Ä—ã –º–∞–≥–∞–∑–∏–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ localStorage');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤:', error);
  }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
export const initializeStore = (): void => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    const savedItems = localStorage.getItem('store_items');
    if (!savedItems) {
      // –ï—Å–ª–∏ –Ω–µ—Ç, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
      saveStoreItems();
    } else {
      // –ï—Å–ª–∏ –µ—Å—Ç—å, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏—Ö
      loadStoreItems();
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞:', error);
  }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–∞–≥–∞–∑–∏–Ω –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è
initializeStore();

// –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ FaunaDB —Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º –∏–∑ localStorage
export const getUserCurrency = async (userId: string): Promise<Currency> => {
  try {
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å –∏–∑ FaunaDB, –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
    if (faunaClient) {
      try {
        const result = await faunaClient.query(
          q.Let(
            {
              userCurrencyRef: q.Match(q.Index('user_currency_by_id'), userId)
            },
            q.If(
              q.Exists(q.Var('userCurrencyRef')),
              q.Select(['data', 'currency'], q.Get(q.Var('userCurrencyRef'))),
              { balance: 0, transactions: [] }
            )
          )
        );

        if (result) {
          console.log(`–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ FaunaDB`);
          // –û–±–Ω–æ–≤–ª—è–µ–º localStorage –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
          localStorage.setItem(`currency_${userId}`, JSON.stringify(result));
          return result as Currency;
        }
      } catch (faunaError) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –∏–∑ FaunaDB:', faunaError);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ localStorage
      }
    }

    // –†–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç: –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ localStorage
    const key = `currency_${userId}`;
    const currencyData = localStorage.getItem(key);

    if (currencyData) {
      return JSON.parse(currencyData);
    }

    // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    return {
      balance: 0,
      transactions: []
    };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–∞–ª—é—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    return {
      balance: 0,
      transactions: []
    };
  }
};

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ FaunaDB –∏ localStorage
export const saveCurrency = async (userId: string, currency: Currency): Promise<void> => {
  try {
    // –í—Å–µ–≥–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞
    localStorage.setItem(`currency_${userId}`, JSON.stringify(currency));

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ FaunaDB, –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
    if (faunaClient) {
      try {
        await faunaClient.query(
          q.Let(
            {
              userCurrencyRef: q.Match(q.Index('user_currency_by_id'), userId)
            },
            q.If(
              q.Exists(q.Var('userCurrencyRef')),
              q.Update(q.Select('ref', q.Get(q.Var('userCurrencyRef'))), {
                data: { currency }
              }),
              q.Create(q.Collection('user_currency'), {
                data: {
                  userId,
                  currency
                }
              })
            )
          )
        );
        console.log(`–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ FaunaDB`);
      } catch (faunaError) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –≤ FaunaDB:', faunaError);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ —É –Ω–∞—Å –µ—Å—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –≤ localStorage
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞:', error);
  }
};

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π FaunaDB
export const addCurrency = async (userId: string, amount: number, description = '–ò–∑–º–µ–Ω–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º'): Promise<boolean> => {
  try {
    const currency = await getUserCurrency(userId);

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–ª–∏ –æ—Ç–Ω–∏–º–∞–µ–º —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—É–º–º—É
    currency.balance += amount;

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ –∏—Å—Ç–æ—Ä–∏—é
    const transaction: Transaction = {
      id: `tr_${Date.now()}`,
      amount,
      description,
      date: Date.now()
    };
    currency.transactions.push(transaction);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    await saveCurrency(userId, currency);

    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞:', error);
    return false;
  }
};

// –°–ø–∏—Å–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π FaunaDB
export const deductCurrency = async (userId: string, amount: number, description: string): Promise<boolean> => {
  try {
    const currency = await getUserCurrency(userId);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤
    if (currency.balance < amount) {
      return false;
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    const transaction: Transaction = {
      id: `tr_${Date.now()}`,
      amount: -amount, // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è
      description,
      date: Date.now()
    };

    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –∏ —Å–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    currency.balance -= amount;
    currency.transactions.push(transaction);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    await saveCurrency(userId, currency);

    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–ø–∏—Å–∞–Ω–∏–∏ –≤–∞–ª—é—Ç—ã:', error);
    return false;
  }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–∫—É–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ FaunaDB –∏–ª–∏ localStorage
export const getUserPurchases = async (userId: string): Promise<Purchase[]> => {
  try {
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø–æ–∫—É–ø–∫–∏ –∏–∑ FaunaDB, –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
    if (faunaClient) {
      try {
        const result = await faunaClient.query(
          q.Let(
            {
              userPurchasesRef: q.Match(q.Index('user_purchases_by_id'), userId)
            },
            q.If(
              q.Exists(q.Var('userPurchasesRef')),
              q.Select(['data', 'purchases'], q.Get(q.Var('userPurchasesRef'))),
              []
            )
          )
        );

        if (result && Array.isArray(result)) {
          console.log(`–ü–æ–∫—É–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ FaunaDB`);
          // –û–±–Ω–æ–≤–ª—è–µ–º localStorage –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
          localStorage.setItem(`purchases_${userId}`, JSON.stringify(result));
          return result as Purchase[];
        }
      } catch (faunaError) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–∫—É–ø–æ–∫ –∏–∑ FaunaDB:', faunaError);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ localStorage
      }
    }

    // –†–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç: –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ localStorage
    const purchasesData = localStorage.getItem(`purchases_${userId}`);
    return purchasesData ? JSON.parse(purchasesData) : [];
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–∫—É–ø–æ–∫:', error);
    return [];
  }
};

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–∫—É–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ FaunaDB –∏ localStorage
export const savePurchases = async (userId: string, purchases: Purchase[]): Promise<void> => {
  try {
    // –í—Å–µ–≥–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞
    localStorage.setItem(`purchases_${userId}`, JSON.stringify(purchases));

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ FaunaDB, –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
    if (faunaClient) {
      try {
        await faunaClient.query(
          q.Let(
            {
              userPurchasesRef: q.Match(q.Index('user_purchases_by_id'), userId)
            },
            q.If(
              q.Exists(q.Var('userPurchasesRef')),
              q.Update(q.Select('ref', q.Get(q.Var('userPurchasesRef'))), {
                data: { purchases }
              }),
              q.Create(q.Collection('user_purchases'), {
                data: {
                  userId,
                  purchases
                }
              })
            )
          )
        );
        console.log(`–ü–æ–∫—É–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ FaunaDB`);
      } catch (faunaError) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–∫—É–ø–æ–∫ –≤ FaunaDB:', faunaError);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ —É –Ω–∞—Å –µ—Å—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –≤ localStorage
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–∫—É–ø–æ–∫:', error);
  }
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏–∏
export const isPremiumFeatureActive = async (userId: string, featureId: string): Promise<boolean> => {
  try {
    const purchases = await getUserPurchases(userId);
    const now = Date.now();

    // –ò—â–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏—é
    return purchases.some(purchase =>
      purchase.itemId === featureId &&
      purchase.isActive &&
      (!purchase.expiryDate || purchase.expiryDate > now)
    );
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏–∏:', error);
    return false;
  }
};

// –ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–∞
export const purchaseItem = async (userId: string, itemId: string): Promise<boolean> => {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤–∞–ª—é—Ç—É –∏ –ø–æ–∫—É–ø–∫–∏
    const user = getCurrentUser();
    if (!user) return false;

    // –ù–∞—Ö–æ–¥–∏–º —Ç–æ–≤–∞—Ä –≤ –º–∞–≥–∞–∑–∏–Ω–µ
    const item = allStoreItems.find(item => item.id === itemId);
    if (!item) return false;

    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Ü–µ–Ω—É —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏
    const finalPrice = item.discount
      ? Math.round(item.price * (1 - item.discount / 100))
      : item.price;

    // –°–ø–∏—Å—ã–≤–∞–µ–º –≤–∞–ª—é—Ç—É
    const success = await deductCurrency(userId, finalPrice, `–ü–æ–∫—É–ø–∫–∞: ${item.name}`);
    if (!success) return false;

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø–æ–∫—É–ø–∫—É
    const purchase: Purchase = {
      id: `purchase_${Date.now()}`,
      userId,
      itemId: item.id,
      purchaseDate: Date.now(),
      isActive: true
    };

    // –î–ª—è –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏–π —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è
    if (item.type === 'premium_feature') {
      purchase.expiryDate = Date.now() + item.duration * 24 * 60 * 60 * 1000;
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∫—É–ø–∫—É –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const purchases = await getUserPurchases(userId);
    purchases.push(purchase);
    await savePurchases(userId, purchases);

    // –ï—Å–ª–∏ —ç—Ç–æ –∞–≤–∞—Ç–∞—Ä, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if (item.type === 'avatar') {
      user.avatar = (item as AvatarItem).avatarUrl;
      saveUser(user);
    }

    // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –ø–æ–∫—É–ø–∫–µ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Telegram
    WebApp.showAlert(`–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–≤–µ—Ä—à–µ–Ω–∞! ${item.name} —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ.`);

    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–∞:', error);
    return false;
  }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∫–∏–¥–æ—á–Ω–æ–π —Ü–µ–Ω—ã (—Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏)
export const getDiscountedPrice = (item: StoreItem): number => {
  if (!item.discount) return item.price;
  return Math.round(item.price * (1 - item.discount / 100));
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞, –∫—É–ø–ª–µ–Ω –ª–∏ —Ç–æ–≤–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
export const isItemPurchased = async (userId: string, itemId: string): Promise<boolean> => {
  try {
    const purchases = await getUserPurchases(userId);
    return purchases.some(purchase => purchase.itemId === itemId && purchase.isActive);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–∫—É–ø–∫–∏:', error);
    return false;
  }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const getActivePremiumFeatures = async (userId: string): Promise<PremiumFeatureItem[]> => {
  try {
    const purchases = await getUserPurchases(userId);
    const now = Date.now();

    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ–∫—É–ø–∫–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏–∏
    const activePremiumPurchases = purchases.filter(purchase =>
      purchase.isActive &&
      (!purchase.expiryDate || purchase.expiryDate > now)
    );

    // –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
    return premiumFeatures.filter(feature =>
      activePremiumPurchases.some(purchase => purchase.itemId === feature.id)
    );
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏–π:', error);
    return [];
  }
};

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏–π
export const checkAndUpdatePremiumFeatures = async (userId: string): Promise<void> => {
  try {
    const purchases = await getUserPurchases(userId);
    const now = Date.now();
    let updated = false;

    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –ø–æ–∫—É–ø–∫–∞–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    purchases.forEach(purchase => {
      if (purchase.expiryDate && purchase.expiryDate < now && purchase.isActive) {
        purchase.isActive = false;
        updated = true;
      }
    });

    // –ï—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏
    if (updated) {
      await savePurchases(userId, purchases);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏–π:', error);
  }
};

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–Ω–æ–π –≤–∞–ª—é—Ç—ã
export const addBonusCurrency = async (userId: string, amount: number): Promise<boolean> => {
  try {
    const currency = await getUserCurrency(userId);

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    const transaction: Transaction = {
      id: `tr_${Date.now()}`,
      amount,
      description: '–ë–æ–Ω—É—Å –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
      date: Date.now()
    };

    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –∏ —Å–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    currency.balance += amount;
    currency.transactions.push(transaction);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    await saveCurrency(userId, currency);

    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –±–æ–Ω—É—Å–∞:', error);
    return false;
  }
};
